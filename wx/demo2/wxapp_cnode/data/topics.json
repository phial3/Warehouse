{"errMsg":"request:ok","data":{"success":true,"data":[{"id":"58298a94e885ce5a3938288a","author_id":"58219f2bd5e70f9005343462","tab":"share","content":"作为一个后端知识比较薄弱的小前端，看完这本书非常有收获，推荐给大家","title":"强烈推荐《node与express开发》这本书！","last_reply_at":"2016-11-17T02:23:35.288Z","good":false,"top":false,"reply_count":2,"visit_count":417,"create_at":"2016-11-14 17:57","author":{"loginname":"mengLLLL","avatar_url":"https://avatars.githubusercontent.com/u/13366294?v=3&s=120"}},{"id":"56ef3edd532839c33a99d00e","author_id":"54009f5ccd66f2eb37190485","tab":"share","content":"[资源教程](https://github.com/AutumnsWind/Front-end-tutorial)\r\n\r\n\r\n1. 综合类\r\n\r\n    - [前端知识体系](http://www.cnblogs.com/sb19871023/p/3894452.html)\r\n    - [前端知识结构](https://github.com/JacksonTian/fks)\r\n    - [Web前端开发大系概览](https://github.com/unruledboy/WebFrontEndStack)\r\n    - [Web前端开发大系概览-中文版](http://www.cnblogs.com/unruledboy/p/WebFrontEndStack.html)\r\n    - [Web Front-end Stack v2.2](https://raw.githubusercontent.com/unruledboy/WebFrontEndStack/master/Web%20Front%20End%20Stack.png)\r\n    - [免费的编程中文书籍索引](https://github.com/justjavac/free-programming-books-zh_CN)\r\n    - [前端书籍](https://github.com/dypsilon/frontend-dev-bookmarks)\r\n    - [前端免费书籍大全](https://github.com/vhf/free-programming-books)\r\n    - [前端知识体系](http://www.cnblogs.com/sb19871023/p/3894452.html)\r\n    - [免费的编程中文书籍索引](https://github.com/justjavac/free-programming-books-zh_CN)\r\n    - [智能社 - 精通JavaScript开发](http://study.163.com/course/introduction/224014.htm)\r\n    - [重新介绍 JavaScript（JS 教程）](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/A_re-introduction_to_JavaScript)\r\n    - [麻省理工学院公开课：计算机科学及编程导论](http://v.163.com/special/opencourse/bianchengdaolun.html)\r\n    - [JavaScript中的this陷阱的最全收集--没有之一](http://segmentfault.com/a/1190000002640298)\r\n    - [JS函数式编程指南](https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html)\r\n    - [JavaScript Promise迷你书（中文版）](http://liubin.github.io/promises-book/)\r\n    - [腾讯移动Web前端知识库](https://github.com/AlloyTeam/Mars)\r\n    - [Front-End-Develop-Guide 前端开发指南](https://github.com/Front-End-Developers-Hunan/Front-End-Develop-Guide)\r\n    - [前端开发笔记本](https://li-xinyang.gitbooks.io/frontend-notebook/content/)\r\n    - [大前端工具集 - 聂微东](https://github.com/nieweidong/fetool)\r\n    - [前端开发者手册](https://dwqs.gitbooks.io/frontenddevhandbook/content/)\r\n\r\n2. 入门类\r\n\r\n    - [前端入门教程](http://www.cnblogs.com/jikey/p/3613082.html)\r\n    - [瘳雪峰的Javascript教程](http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000)\r\n    - [jQuery基础教程](http://www.imooc.com/view/11)\r\n    - [前端工程师必备的PS技能——切图篇](http://www.imooc.com/view/506)\r\n    - [结合个人经历总结的前端入门方法](https://github.com/qiu-deqing/FE-learning)\r\n\r\n3. 效果类\r\n\r\n    - [弹出层](http://www.imooc.com/learn/58)\r\n    - [焦点图轮播特效](http://www.imooc.com/learn/18)\r\n    \r\n4. 工具类\r\n\r\n    - [css sprite 雪碧图制作](http://www.imooc.com/learn/93)\r\n    - [版本控制入门 – 搬进 Github](http://www.imooc.com/learn/390)\r\n    - [Grunt-beginner前端自动化工具](http://www.imooc.com/learn/30)\r\n\r\n5. 慕课专题\r\n\r\n    - [张鑫旭 - 慕课系列](http://www.imooc.com/space/teacher/id/197450)\r\n    - [lyn - 慕课系列](http://www.imooc.com/space/teacher/id/104593)\r\n    - [艾伦 - 慕课系列](http://www.imooc.com/space/teacher/id/290139)\r\n    - [碧仔 - Hello，移动WEB](http://www.imooc.com/view/494)\r\n\r\n6. 周报类\r\n\r\n    - [平安科技移动开发二队技术周报](https://github.com/PaicHyperionDev/MobileDevWeekly)\r\n\r\n### 六. API:\r\n\r\n#### 1. 总目录\r\n\r\n1. 开发中心\r\n\r\n    - [mozilla js参考](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript)\r\n    - [chrome开发中心（chrome的内核已转向blink）](https://developer.chrome.com/extensions/api_index.html)\r\n    - [safari开发中心](https://developer.apple.com/library/safari/navigation)\r\n    - [microsoft js参考](https://msdn.microsoft.com/zh-cn/library/d1et7k7c(v=vs.94).aspx)\r\n    - [js秘密花园](http://sanshi.me/articles/JavaScript-Garden-CN/html/index.html)\r\n    - [js秘密花园](http://bonsaiden.github.io/JavaScript-Garden/zh/)\r\n    - [w3help](http://www.w3help.org/) 综合Bug集合网站\r\n\r\n2. 综合搜索\r\n\r\n    - [javascripting](http://www.javascripting.com/)\r\n    - [各种流行库搜索](http://microjs.com/)\r\n\r\n3. 综合API\r\n    \r\n    - [runoob.com-包含各种API集合](http://www.runoob.com/)\r\n    - [开源中国在线API文档合集](http://tool.oschina.net/apidocs)\r\n    - [devdocs](http://devdocs.io/) 英文综合API网站\r\n\r\n#### 2. jQuery\r\n\r\n* [jQuery API 中文文档](http://www.jquery123.com/)\r\n* [hemin 在线版](http://hemin.cn/jq/)\r\n* [css88 jq api](http://www.css88.com/jqapi-1.9/on/)\r\n* [css88 jqui api](http://www.css88.com/jquery-ui-api/)\r\n* [学习jquery](http://learn.jquery.com/)\r\n* [jquery 源码查找](http://james.padolsey.com/jquery/)\r\n\r\n#### 3. Ecmascript\r\n\r\n- [Understanding ECMAScript 6 - Nicholas C. Zakas](https://leanpub.com/understandinges6/read)\r\n- [exploring-es6](https://leanpub.com/exploring-es6/read)\r\n- [exploring-es6翻译](https://github.com/es6-org/exploring-es6)\r\n- [exploring-es6翻译后预览](http://es6-org.github.io/exploring-es6/)\r\n- [阮一峰 es6](http://es6.ruanyifeng.com/)\r\n- [阮一峰 Javascript](http://javascript.ruanyifeng.com/)\r\n- [ECMA-262，第 5 版](http://yanhaijing.com/es5/)\r\n- [es5](http://es5.github.io/)\r\n\r\n#### 4. Js template\r\n\r\n- [template-chooser](http://garann.github.io/template-chooser/)\r\n- [artTemplate](https://github.com/aui/artTemplate)\r\n- [tomdjs](https://github.com/aui/tmodjs/blob/master/README.md)\r\n- [淘宝模板juicer模板](http://juicer.name/docs/docs_zh_cn.html)\r\n- [Fxtpl v1.0 繁星前端模板引擎](http://koen301.github.io/fxtpl/)\r\n- [laytpl](http://laytpl.layui.com/)\r\n- [mozilla - nunjucks](https://github.com/mozilla/nunjucks)\r\n- [Juicer](https://github.com/PaulGuo/Juicer)\r\n- [dustjs](http://akdubya.github.io/dustjs/)\r\n- [etpl](http://ecomfe.github.io/etpl/)\r\n\r\n#### 5. 弹出层\r\n\r\n- [artDialog 最新版](https://github.com/aui/artDialog)\r\n- [artDialog 文档](http://aui.github.io/artDialog/doc/index.html)\r\n- [google code 下载地址](https://code.google.com/p/artdialog/downloads/list)\r\n- [贤心弹出层](http://layer.layui.com/)\r\n- [响应式用户交互组件库](https://github.com/bh-lay/UI)\r\n- [sweetalert-有css3动画弹出层](http://t4t5.github.io/sweetalert/)\r\n\r\n#### 6. CSS\r\n\r\n- [CSS 语法参考](http://tympanus.net/codrops/css_reference/)\r\n- [CSS3动画手册](http://isux.tencent.com/css3/index.html)\r\n- [腾讯css3动画制作工具](http://isux.tencent.com/css3/tools.html)\r\n- [志爷css小工具集合](http://linxz.github.io/tianyizone/)\r\n- [css3 js 移动大杂烩](http://www.note12.com/category/blog/2014-6-5/538fe0a9f786f1b7019a4dfb)\r\n- [bouncejs 触摸库](http://bouncejs.com/)\r\n- [css3 按钮动画](http://fian.my.id/Waves/)\r\n- [animate.css](http://daneden.github.io/animate.css/)\r\n- [全局CSS的终结(狗带) [译]](http://www.alloyteam.com/2015/10/8536/)\r\n\r\n#### 7. Angularjs\r\n\r\n- [Angular.js 的一些学习资源](https://github.com/dolymood/AngularLearning)\r\n- [angularjs中文社区](http://angularjs.cn/)\r\n- [Angularjs源码学习](http://www.cnblogs.com/xuwenmin888/p/3739096.html)\r\n- [Angularjs源码学习](http://www.ifeenan.com/?c=AngularJS)\r\n- [angular对bootstrap的封装](http://angular-ui.github.io/bootstrap/)\r\n- [angularjs + nodejs](https://cnodejs.org/topic/51404e0f069911196d2e3923)\r\n- [吕大豹 Angularjs](http://www.cnblogs.com/lvdabao/tag/AngularJs/)\r\n- [AngularJS 最佳实践](http://www.infoq.com/cn/news/2013/02/angular-web-app)\r\n- [Angular的一些扩展指令](http://www.lovelucy.info/angularjs-best-practices.html)\r\n- [Angular数据绑定原理](https://github.com/Pasvaz/bindonce)\r\n- [一些扩展Angular UI组件](https://github.com/angular-ui/)\r\n- [Ember和AngularJS的性能测试](http://voidcanvas.com/emberjs-vs-angularjs-performance-testing/)\r\n- [带你走近AngularJS - 基本功能介绍](http://www.cnblogs.com/powertoolsteam/p/angularjs-introdection.html)\r\n- [Angularjs开发指南](http://angular.duapp.com/docs/guide)\r\n- [Angularjs学习](http://www.cnblogs.com/amosli/p/3710648.html)\r\n- [不要带着jQuery的思维去学习AngularJS](http://www.rainweb.cn/article/angularjs-jquery.html)\r\n- [angularjs 学习笔记](http://wangjiatao.diandian.com/?tag=angularjs)\r\n- [angularjs 开发指南](http://www.angularjs.cn/T008)\r\n- [angularjs 英文资料](https://github.com/jmcunningham/AngularJS-Learning)\r\n- [angular bootstrap](http://angular-ui.github.io/bootstrap/)\r\n- [angular jq mobile](https://github.com/opitzconsulting/jquery-mobile-angular-adapter)\r\n- [angular ui](http://mgcrea.github.io/angular-strap/)\r\n- [整合jQuery Mobile+AngularJS经验谈](http://www.tuicool.com/articles/7ZZVr2)\r\n- [有jQuery背景，该如何用AngularJS编程思想](http://blog.jobbole.com/46589/ )\r\n- [AngularJS在线教程](http://each.sinaapp.com/angular/)\r\n- [angular学习笔记](http://www.zouyesheng.com/angular.html)\r\n\r\n#### 8. React\r\n- [react.js 中文论坛](http://www.react-china.org/)\r\n- [react.js 官方网址](https://facebook.github.io/react/index.html)\r\n- [react.js 官方文档](https://facebook.github.io/react/docs/getting-started.html)\r\n- [react.js material UI](http://material-ui.com/#/)\r\n- [react.js TouchstoneJS UI](http://touchstonejs.io/)\r\n- [react.js amazeui UI](http://amazeui.org/react/)\r\n- [React 入门实例教程 - 阮一峰](http://www.ruanyifeng.com/blog/2015/03/react.html)\r\n- [React Native 中文版](http://wiki.jikexueyuan.com/project/react-native/)\r\n- [Webpack 和 React 小书 - 前端乱炖](http://www.html-js.com/article/Fakefish%203053)\r\n- [Webpack 和 React 小书 - gitbook](https://fakefish.github.io/react-webpack-cookbook/)\r\n- [webpack](https://github.com/webpack/webpack)\r\n- [Webpack，101入门体验](http://html-js.com/article/3009)\r\n- [webpack入门教程](http://html-js.com/article/3113)\r\n- [基于webpack搭建前端工程解决方案探索](http://segmentfault.com/a/1190000003499526)\r\n- [React原创实战视频教程](http://www.piliyu.com/)\r\n\r\n#### 9. 移动端API\r\n\r\n1. API    \r\n    - [99移动端知识集合](https://github.com/jtyjty99999/mobileTech)\r\n    - [移动端前端开发知识库](https://github.com/AlloyTeam/Mars)\r\n    - [移动前端的一些坑和解决方法（外观表现）](http://caibaojian.com/mobile-web-bug.html)\r\n    - [【原】移动web资源整理](http://www.cnblogs.com/PeunZhang/p/3407453.html)\r\n    - [zepto 1.0 中文手册](http://mweb.baidu.com/zeptoapi/)\r\n    - [zepto 1.0 中文手册](http://www.html-5.cn/Manual/Zepto/)\r\n    - [zepto 1.1.2](http://www.css88.com/doc/zeptojs_api/)\r\n    - [zepto 中文注释](http://www.cnblogs.com/sky000/archive/2013/03/29/2988952.html)\r\n    - [jqmobile 手册](http://app-framework-software.intel.com/api.php)\r\n    - [移动浏览器开发集合](https://github.com/maxzhang/maxzhang.github.com/issues)\r\n    - [移动开发大杂烩](https://github.com/hoosin/mobile-web-favorites)\r\n    - [微信webview中的一些问题](http://lin-chao.github.io/2014/11/14/%E5%BE%AE%E4%BF%A1webview%E4%B8%AD%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/)\r\n2. 框架    \r\n    - [特色的HTML框架可以创建精美的iOS应用](http://framework7.taobao.org/)\r\n    - [淘宝SUI](http://m.sui.taobao.org/)\r\n\r\n#### 10. avalon\r\n\r\n- [avalonjs](http://avalonjs.github.io/)\r\n- [Avalon新一代UI库： OniUI](http://ued.qunar.com/oniui/index.html)\r\n- [avalon.oniui-基于avalon的组件库](https://github.com/RubyLouvre/avalon.oniui)\r\n- []()\r\n\r\n#### 11. Requriejs\r\n\r\n- [Javascript模块化编程（一）：模块的写法 ](http://www.ruanyifeng.com/blog/2012/10/javascript_module.html)\r\n- [Javascript模块化编程（二）：AMD规范](http://www.ruanyifeng.com/blog/2012/10/asynchronous_module_definition.html)\r\n- [Javascript模块化编程（三）：require.js的用法](http://www.ruanyifeng.com/blog/2012/11/require_js.html)\r\n- [RequireJS入门（一）](http://www.cnblogs.com/snandy/archive/2012/05/22/2513652.html)\r\n- [RequireJS入门（二）](http://www.cnblogs.com/snandy/archive/2012/05/23/2513712.html)\r\n- [RequireJS进阶（三）](http://www.cnblogs.com/snandy/archive/2012/06/08/2538001.html)\r\n- [requrie源码学习](http://www.cnblogs.com/yexiaochai/p/3632580.html )\r\n- [requrie 入门指南](http://www.oschina.net/translate/getting-started-with-the-requirejs-library )\r\n- [requrieJS 学习笔记](http://www.cnblogs.com/yexiaochai/p/3214926.html )\r\n- [requriejs 其一 ](http://cyj.me/why-seajs/requirejs/ )\r\n- [require backbone结合](http://www.cnblogs.com/yexiaochai/p/3221081.html )\r\n\r\n#### 12. Seajs\r\n\r\n- [seajs](http://seajs.org/)\r\n- [seajs 中文手册](http://cyj.me/why-seajs/zh/)\r\n\r\n#### 13. Less,sass\r\n\r\n- [sass](http://www.w3cplus.com/sassguide/)\r\n- [sass教程-sass中国](http://www.sass.hk/)\r\n- [Sass 中文文档](http://sass.bootcss.com/)\r\n- [less](http://less.bootcss.com/)\r\n\r\n#### 14. Markdown\r\n        \r\n- [Markdown 语法说明 (简体中文版)](http://wowubuntu.com/markdown/)\r\n- [markdown入门参考](https://github.com/LearnShare/Learning-Markdown/blob/master/README.md)\r\n- [gitbook](https://www.gitbook.com/) 国外的在线markdown可编辑成书\r\n- [mdeditor](https://www.zybuluo.com/mdeditor)  一款国内的在线markdown编辑器\r\n- [stackedit](https://stackedit.io) 国外的在线markdown编辑器，功能强大，同步云盘\r\n- [mditor](http://bh-lay.github.io/mditor/) 一款轻量级的markdown编辑器\r\n- [lepture-editor](https://github.com/lepture/editor)\r\n- [markdown-editor](https://github.com/jbt/markdown-editor)\r\n\r\n#### 15. D3\r\n\r\n- [d3 Tutorials](https://github.com/mbostock/d3/wiki/Tutorials)\r\n- [Gallery](https://github.com/mbostock/d3/wiki/Gallery)\r\n- [lofter](http://datavisual.lofter.com/post/40cf3a_188e535)\r\n- [iteye](http://alanland.iteye.com/blog/1878595)\r\n- [ruanyifeng](http://javascript.ruanyifeng.com/library/d3.html)\r\n\r\n#### 16. 兼容性\r\n\r\n- [esma 兼容列表](http://kangax.github.io/compat-table/es6/)\r\n- [W3C CSS验证服务](http://jigsaw.w3.org/css-validator/validator.html.zh-cn)\r\n- [caniuse](http://caniuse.com/#index )\r\n- [csscreator](http://csscreator.com/properties)\r\n- [microsoft](https://msdn.microsoft.com/zh-cn/library/cc351024(v=vs.85).aspx)\r\n- [在线测兼容-移动端](http://www.responsinator.com/)\r\n- [emulators](https://www.manymo.com/emulators)\r\n\r\n#### 17. UI相关\r\n\r\n- [bootcss](http://v3.bootcss.com/)\r\n- [MetroUICSS](http://www.w3cplus.com/MetroUICSS/)\r\n- [semantic](http://semantic-ui.com/)\r\n- [Buttons](http://alexwolfe.github.io/Buttons/)\r\n- [kitecss](http://hiloki.github.io/kitecss/)\r\n- [pintuer](http://www.pintuer.com/)\r\n- [amazeui](http://amazeui.org/)\r\n- [worldhello](http://www.worldhello.net/gotgithub/index.html)\r\n- [linuxtoy](http://igit.linuxtoy.org/contents.html)\r\n- [gitmagic](http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/)\r\n- [rogerdudler](http://rogerdudler.github.io/git-guide/index.zh.html)\r\n- [gitref](http://gitref.justjavac.com/)\r\n- [book](http://git-scm.com/book/zh)\r\n- [gogojimmy](http://gogojimmy.net/2012/01/17/how-to-use-git-1-git-basic/)\r\n\r\n#### 18. HTTP\r\n\r\n- [HTTP API 设计指南](http://segmentfault.com/bookmark/1230000002521721)\r\n\r\n#### 19. 其它API\r\n\r\n- [javascript流行库汇总](javascriptoo)\r\n- [验证api](http://niceue.com/validator/demo/index.php)\r\n- [underscore 中文手册](http://www.css88.com/doc/underscore/)\r\n- [underscore源码分析](http://www.html-js.com/article/Underscorejs-source-code-analysis-of-underscorejs-source-code-analysis%203031)\r\n- [underscore源码分析-亚里士朱德的博客](http://yalishizhude.github.io/tags/underscore/)\r\n- [underscrejs en api](http://underscorejs.org/)\r\n- [lodash - underscore的代替品](https://lodash.com/)\r\n- [ext4api](http://extjs-doc-cn.github.io/ext4api/)\r\n- [backbone 中文手册](http://www.csser.com/tools/backbone/backbone.js.html)\r\n- [qwrap手册](http://dev.qwrap.com/resource/js/_docs/_youa/#/qw/base/loadJs_.htm)\r\n- [缓动函数](http://easings.net/zh-cn)\r\n- [svg 中文参考](http://www.w3school.com.cn/svg/svg_reference.asp)\r\n- [svg mdn参考](https://developer.mozilla.org/en-US/docs/Web/SVG)\r\n- [svg 导出 canvas](https://github.com/gabelerner/canvg)\r\n- [svg 导出 png](https://github.com/exupero/saveSvgAsPng)\r\n- [ai-to-svg](http://www.zamzar.com/convert/ai-to-svg/)\r\n- [localStorage 库](https://github.com/machao/localStorage)\r\n\r\n#### 20. 图表类\r\n\r\n- [Highcharts 中文API](http://www.hcharts.cn/api/index.php)\r\n- [Highcharts 英文API](http://api.highcharts.com/highcharts)\r\n- [ECharts 百度的图表软件](http://echarts.baidu.com/ )\r\n- [高德地图](http://lbs.amap.com/api/)\r\n- [开源的矢量图脚本框架](http://paperjs.org/)\r\n- [svg 地图](http://jvectormap.com/)\r\n\r\n#### 21. vue\r\n\r\n- [Vue](http://cn.vuejs.org/)\r\n- [Vue 论坛](http://forum.vuejs.org/)\r\n- [Vue 入门指南](http://www.cnblogs.com/aaronjs/p/3660102.html)\r\n- [Vue 的一些资源索引](http://segmentfault.com/a/1190000000411057)\r\n- []()\r\n\r\n#### 21. 正则\r\n\r\n- [JS正则表达式元字符](http://segmentfault.com/a/1190000002471140)\r\n- [正则表达式30分钟入门教程](http://deerchao.net/tutorials/regex/regex.htm)\r\n- [MDN-正则表达式](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions)\r\n- [ruanyifeng - RegExp对象](http://javascript.ruanyifeng.com/stdlib/regexp.html)\r\n- [小胡子哥 - 进阶正则表达式](http://div.io/topic/764?page=1)\r\n- [is.js](https://github.com/Cedriking/is.js/blob/master/is.js)\r\n- [正则在线测试](http://regexper.com/)\r\n- []()\r\n\r\n#### 22. ionic\r\n\r\n- [ionic](https://github.com/ychow/ionic-guide)\r\n\r\n#### 23. 其它\r\n\r\n- [Mock.js 是一款模拟数据生成器](http://mockjs.com/)\r\n\r\n### 七. 开发规范\r\n\r\n1. 前端\r\n    - [通过分析github代码库总结出来的工程师代码书写习惯](http://alloyteam.github.io/CodeGuide)\r\n    - [HTML&CSS编码规范 by @mdo](http://codeguide.bootcss.com/)\r\n    - [团队合作的css命名规范-腾讯AlloyTeam前端团队](http://www.alloyteam.com/2011/10/107/)\r\n    - [前端编码规范之js - by yuwenhui](http://yuwenhui.github.io/)\r\n    - [前端编码规范之js - by 李靖](http://www.cnblogs.com/hustskyking/p/javascript-spec.html)\r\n    - [前端开发规范手册](http://zhibimo.com/read/Ashu/front-end-style-guide/)\r\n    - [Airbnb JavaScript 编码规范（简体中文版）](https://github.com/yuche/javascript#table-of-contents)\r\n    - [AMD与CMD规范的区别](http://www.zhihu.com/question/20351507)\r\n    - [AMD与CMD规范的区别](http://www.cnblogs.com/tugenhua0707/p/3507957.html)\r\n    - [KISSY 源码规范](http://docs.kissyui.com/1.4/docs/html/tutorials/style-guide/kissy-source-style.html)\r\n    - [bt编码规范](http://codeguide.bootcss.com/)\r\n    - [规范加强版](https://github.com/Suxiaogang/Code_Guide)\r\n    - [前端代码规范 及 最佳实践](http://blog.jobbole.com/79075/)\r\n    - [百度前端规范](http://coderlmn.github.io/code-standards/)\r\n    - [百度前端规范](http://isobar-idev.github.io/code-standards/)\r\n    - [百度前端规范](http://zhuanlan.zhihu.com/fuyun/19884834)\r\n    - [ECMAScript6 编码规范--广发证券前端团队](https://github.com/gf-rd/es6-coding-style)\r\n    - [JavaScript 风格指南/编码规范（Airbnb公司版）](http://blog.jobbole.com/79484/)\r\n    - [网易前端开发规范](http://nec.netease.com/standard)\r\n    - [css模块](http://www.75team.com/archives/1049)\r\n    - [前端规范资源列表](https://github.com/ecomfe/spec)\r\n\r\n2. PHP\r\n\r\n    - [最流行的PHP 代码规范](http://segmentfault.com/a/1190000000443795)\r\n    - [最流行的PHP 代码规范](https://github.com/hfcorriez/fig-standards/blob/zh_CN/%E6%8E%A5%E5%8F%97/PSR-2-coding-style-guide.md)\r\n        \r\n3. Android\r\n\r\n    - [【敏捷开发】Android团队开发规范](http://www.cnblogs.com/lcw/p/3619181.html)\r\n    - [Android 开发规范与应用](http://www.jianshu.com/p/4390f4fe19b3)\r\n\r\n### 八. 其它收集\r\n\r\n#### 1. 各大公司开源项目\r\n\r\n- [Facebook Projects](https://code.facebook.com/projects/web/)\r\n- [百度web前端研发部](http://fex.baidu.com/)\r\n- [百度EFE](http://efe.baidu.com/)\r\n- [百度github](https://github.com/fex-team/)\r\n- [alloyteam](http://www.alloyteam.com/)\r\n- [alloyteam-github](http://alloyteam.github.io/)\r\n- [alloyteam-AlloyGameEngine](https://github.com/AlloyTeam/AlloyGameEngine)\r\n- [AlloyDesigner](http://alloyteam.github.io/AlloyDesigner/) 即时修改，即时保存，设计稿较正，其它开发辅助工具\r\n- [H5交互页编辑器AEditor介绍](http://www.alloyteam.com/2015/06/h5-jiao-hu-ye-bian-ji-qi-aeditor-jie-shao/) H5动画交互页开发的工具介绍\r\n- [AEditor](http://aeditor.alloyteam.com/) H5动画交互页开发的工具\r\n- [maka](http://forum.maka.im/wordpress/)\r\n- [值得订阅的weekly](https://github.com/fenbility/weekly-feed)\r\n- [腾讯html5](http://cube.qq.com/)\r\n- [奇舞团开源项目](http://75team.github.io/)\r\n- [Qunar UED](http://ued.qunar.com/)\r\n\r\n#### 2. Javascript\r\n\r\n1. 常用    \r\n\r\n    - [ieBetter.js-让IE6-IE8拥有IE9+,Chrome等浏览器特性](http://www.zhangxinxu.com/wordpress/2013/12/iebetter-js-make-ie6-ie8-like-modern-browser-ie9-chrome/)\r\n    - [模拟键盘](http://mottie.github.io/Keyboard/)\r\n    - [拼音](https://github.com/hotoo/pinyin)\r\n    - [中国个人身份证号验证](https://github.com/mc-zone/IDValidator)\r\n\r\n2. 算法\r\n\r\n    - [数据结构与算法 JavaScript 描述. 章节练习](https://github.com/Ralph-Wang/algorithm.in.js)\r\n    - [常见排序算法（JS版）](https://github.com/twobin/twobinSort)\r\n    - [经典排序](https://github.com/luofei2011/jsAgm/blob/master/js/sort.js)\r\n    - [常见排序算法-js版本](https://github.com/hechangmin/jssort)\r\n    - [JavaScript 算法与数据结构 精华集](https://github.com/lightningtgc/JavaScript-Algorithms)\r\n    - [面试常考算法题精讲](http://www.nowcoder.com/live/courses)\r\n    - []()\r\n\r\n3. 移动端\r\n    \r\n    - [fastclick](https://github.com/ftlabs/fastclick)\r\n    - [no-click-delay](https://github.com/mmastrac/jquery-noclickdelay)\r\n\r\n4. JSON\r\n \r\n    - [模拟生成JSON数据](http://beta.json-generator.com/)\r\n    - [返回跨域JSONAPI](http://jsonp.afeld.me/)\r\n\r\n#### 3. Html5\r\n- [HTML5 有哪些让你惊艳的 demo？](http://www.zhihu.com/question/24398907)\r\n\r\n#### 4. CSS\r\n- [browserhacks](http://browserhacks.com/)\r\n- []()\r\n\r\n#### 5. jQuery\r\n\r\n1. 焦点图\r\n    \r\n    - [myfocus](https://github.com/koen301/myfocus)\r\n    - [myfocus-官方演示站](http://www.chhua.com/myfocus/)\r\n    - [SuperSlidev2.1 -- 大话主席](http://www.superslide2.com/)\r\n    - [soChange](http://www.bujichong.com/sojs/soChange/index.html)\r\n\r\n#### 6. Ext, EasyUI, J-UI 及其它各种UI方案\r\n\r\n1. Ext\r\n\r\n    - [extjs](https://www.sencha.com/products/extjs/)\r\n    - [ext4英文api](http://docs.sencha.com/extjs/4.0.7/)\r\n    - [ext4中文api](http://extjs-doc-cn.github.io/ext4api/)\r\n    - []()\r\n    \r\n2. EasyUI\r\n\r\n    - [jquery easyui 未压缩源代码](http://jquery-easyui.googlecode.com/svn/trunk/src/)\r\n\r\n3. J-UI\r\n\r\n    - [J-UI](http://jui.org/)\r\n   \r\n4. Other\r\n\r\n    - [MUI-最接近原生APP体验的高性能前端框架](http://dcloudio.github.io/mui/)\r\n    - [Amaze UI | 中国首个开源 HTML5 跨屏前端框架](http://amazeui.org/)\r\n    - [淘宝 HTML5 前端框架](http://m.sui.taobao.org/)\r\n    - [KISSY - 阿里前端JavaScript库](http://docs.kissyui.com/)\r\n    - [网易Nej - Nice Easy Javascript](http://nej.netease.com/)\r\n    - [Kendo UI MVVM Demo](http://demos.telerik.com/kendo-ui/mvvm/index)\r\n    - [Bootstrap](http://www.bootcss.com/)\r\n    - [Smart UI](http://smartui.chinamzz.com/)\r\n    - [雅虎UI - CSS UI](http://developer.yahoo.com/yui/grids/)\r\n\r\n#### 7. 页面 社会化 分享功能\r\n\r\n- [百度分享](http://share.baidu.com/) pc端\r\n- [JiaThis](http://jiathis.com/) pc端\r\n- [社会化分享组件](http://developer.baidu.com/soc/share) 移动端\r\n- [ShareSDK 轻松实现社会化功能](http://www.mob.com/#/index) 移动端\r\n- [友盟分享](http://dev.umeng.com/social/android/quick-integration) 移动端\r\n\r\n#### 8. 富文本编辑器\r\n\r\n- [百度 ueditor](http://ueditor.baidu.com/website/)\r\n- [经典的ckeditor](http://ckeditor.com/)\r\n- [经典的kindeditor](http://kindeditor.net/)\r\n- [wysiwyg](http://www.bootcss.com/p/bootstrap-wysiwyg/)\r\n- [一个有情怀的编辑器。Bach's Editor](http://integ.github.io/BachEditor/)\r\n- [tower用的编辑器](https://github.com/mycolorway/simditor)\r\n- [summernote 编辑器](https://github.com/summernote/summernote)\r\n- [html5编辑器](http://neilj.github.io/Squire/)\r\n- [XEditor](http://lab.hustlzp.com/XEditor/)\r\n- [wangEditor](https://github.com/wangfupeng1988/wangEditor )\r\n\r\n#### 9. 日历\r\n\r\n1. PC\r\n\r\n    - [经典my97](http://www.my97.net/dp/demo/index.htm)\r\n    - [强大的独立日期选择器](http://www.cnblogs.com/gbin1/archive/2012/04/16/2452105.html)\r\n    - [fullcalendar](http://fullcalendar.io/)\r\n    - [fullcalendar日历控件知识点集合 ](http://blog.csdn.net/francislaw/article/details/7740630)\r\n    - [中文api](http://blog.sina.com.cn/s/blog_9475b1c101012c5f.html)\r\n    - [农历日历](https://github.com/zzyss86/LunarCalendar)\r\n    - [超酷的仿百度带节日日历老黄历控件](http://www.sucaisj.com/jiaoben/date/201509/16856.html)\r\n    - [日期格式化](http://momentjs.com/)\r\n    - [大牛日历控件](https://github.com/Johnqing/QPAYCalendar/)\r\n    - [我群某管理作品](https://github.com/Iamlars/dateMarker)\r\n    - [input按位替换-官网](http://digitalbush.com/projects/masked-input-plugin/)\r\n    - [input按位替换-github](https://github.com/digitalBush/jquery.maskedinput/tree/1.2.2)\r\n    - [bootstrap-daterangepicker](https://github.com/dangrossman/bootstrap-daterangepicker)\r\n    - [国外30个插件集合](http://www.vandelaydesign.com/30-best-free-jquery-plugins/)\r\n    - [JavaScript datepicker](http://dbushell.com/2012/10/09/pikaday-javascript-datepicker/)\r\n    - [Datepair.js](http://jonthornton.github.io/Datepair.js/)\r\n    - [一个风格多样的日历](https://github.com/glad/glDatePicker)\r\n    - [弹出层式的全日历](http://amsul.ca/pickadate.js/date/)\r\n    - [jquery双日历](http://www.daterangepicker.com/)\r\n\r\n2. 移动\r\n\r\n    - [大气实用jQuery手机移动端日历日期选择插件](http://www.frankdemo.cn/index.php?c=content&a=show&id=115)\r\n    - [jQuery Mobile 移动开发中的日期插件Mobiscroll ](https://mobiscroll.com/)\r\n\r\n\r\n3. Date library\r\n\r\n    - [Datejs](https://github.com/datejs/Datejs)\r\n    - [sugarjs](http://sugarjs.com/api/Date)\r\n\r\n#### 10. 综合效果搜索平台\r\n\r\n- [效果网](http://www.jq22.com)\r\n- [17素材](http://www.17sucai.com/)\r\n- [常用的JavaScript代码片段](http://microjs.com/)\r\n\r\n#### 11. 前端工程化\r\n\r\n1. 概述\r\n\r\n    - [前端工具大全](http://www.awesomes.cn/)\r\n    - [什么是前端工程化](https://github.com/fouber/blog/issues/10?from=timeline&isappinstalled=0#)\r\n\r\n2. Gulp \r\n    \r\n    - [Gulp官网](http://gulpjs.com/)\r\n    - [Gulp中文网](http://www.gulpjs.com.cn/)\r\n    - [gulp资料收集](https://github.com/Platform-CUF/use-gulp)\r\n    - [Gulp：任务自动管理工具 - ruanyifeng](http://javascript.ruanyifeng.com/tool/gulp.html)\r\n    - [Gulp插件](http://gulpjs.com/plugins/)\r\n    - [Gulp不完全入门教程](http://www.ido321.com/1622.html)\r\n    - [为什么使用gulp?](https://github.com/hjzheng/CUF_meeting_knowledge_share/issues/33)\r\n    - [Gulp安装及配合组件构建前端开发一体化](http://www.dbpoo.com/getting-started-with-gulp/)\r\n    - [Gulp 入门指南](https://github.com/nimojs/gulp-book)\r\n    - [Gulp 入门指南 - nimojs](https://github.com/nimojs/blog/issues/19)\r\n    - [Gulp入门教程](http://markpop.github.io/2014/09/17/Gulp%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/)\r\n    - [Gulp in Action](http://www.imooc.com/video/5692)\r\n    - [Gulp开发教程（翻译）](http://www.w3ctech.com/topic/134)\r\n    - [前端构建工具gulpjs的使用介绍及技巧](http://www.cnblogs.com/2050/p/4198792.html)\r\n\r\n3. Grunt\r\n\r\n    - [gruntjs](http://gruntjs.com/)\r\n    - [Grunt中文网](http://www.gruntjs.net/)\r\n\r\n4. Fis\r\n\r\n    - [fis 官网](http://fex-team.github.io/fis-site/index.html)\r\n    - [fis](http://fis.baidu.com/)\r\n\r\n#### 12. 轮播图\r\n\r\n1. pc图轮\r\n\r\n    - [单屏轮播sochange](http://www.jsfoot.com/jquery/demo/2011-09-20/192.html)\r\n    - [左右按钮多图切换](http://bxslider.com/examples/carousel-demystified)\r\n    - [fullpage全屏轮播](https://github.com/alvarotrigo/fullPage.js/)\r\n\r\n2. 移动端\r\n\r\n    - [无缝切换](http://www.swipejs.com/)\r\n    - [滑屏效果](http://www.idangero.us/swiper/)\r\n    - [全屏fullpage](https://github.com/peunzhang/fullpage)\r\n    - [单个图片切换](https://github.com/qiqiboy/touchslider)\r\n    - [单个全屏切换](https://github.com/peunzhang/slip.js)\r\n    - [百度的切换库](http://touch.code.baidu.com/examples.html?qq-pf-to=pcqq.group)\r\n    - [单个全屏切换](https://github.com/peunzhang/iSlider)\r\n    - [滑屏效果](https://github.com/saw/touch-interfaces)\r\n    - [旋转拖动设置](http://baijs.com/tinycircleslider/)\r\n    - [类似于swipe切换](http://touchslider.com/)\r\n    - [支持多种形式的触摸滑动](http://www.swiper.com.cn/demo/index.html)\r\n    - [滑屏效果](https://github.com/joker-ye/main/blob/master/wap/index.html)\r\n    - [大话主席pc移动图片轮换](http://www.superslide2.com/)\r\n    - [滑屏效果](https://github.com/hahnzhu/parallax.js)\r\n    - [基于zepto的fullpage](https://github.com/yanhaijing/zepto.fullpage)\r\n    - [[WebApp]定宽网页设计下，固定宽度布局开发WebApp并实现多终端下WebApp布局自适应](http://www.cnblogs.com/plums/archive/2013/01/10/WebApp-fixed-width-layout-of-multi-terminal-adapter-since.html)\r\n    - [判断微信客户端的那些坑](http://loo2k.com/blog/detecting-wechat-client/)\r\n    - [可以通过javascript直接调用原生分享的工具](https://github.com/JefferyWang/nativeShare.js)\r\n    - [JiaThis 分享到微信代码](http://www.jiathis.com/help/html/weixin-share-code)\r\n    - [聊聊移动端跨平台开发的各种技术](http://fex.baidu.com/blog/2015/05/cross-mobile/)\r\n    - [前端自动化测试](http://www.zhihu.com/question/29922082)\r\n    - [多种轮换图片](http://ajccom.github.io/niceslider/)\r\n    - [滑动侧边栏](https://mango.github.io/slideout/)\r\n\r\n#### 13. 文件上传\r\n\r\n- [百度上传组件](http://fex.baidu.com/webuploader/)\r\n- [上传](https://blueimp.github.io/jQuery-File-Upload/)\r\n- [flash 头像上传](http://www.hdfu.net/)\r\n- [图片上传预览](http://www.dropzonejs.com/)\r\n- [图片裁剪](http://elemefe.github.io/image-cropper/)\r\n- [图片裁剪-shearphoto](http://www.shearphoto.com/)\r\n- [jQuery图片处理](http://www.oschina.net/project/tag/284/jquery-image-tools?lang=0&os=0&sort=view&p=2)\r\n- []()\r\n\r\n#### 14. 模拟select\r\n\r\n- [糖饼 select](http://aui.github.io/popupjs/doc/selectbox.html)\r\n- [flexselect](https://github.com/rmm5t/jquery-flexselect)\r\n- [双select](http://loudev.com/)\r\n- [select2](http://select2.github.io/)\r\n- []()\r\n\r\n#### 15. 取色插件\r\n\r\n- [类似 Photoshop 的界面取色插件](http://www.jq22.com/plugin/367)\r\n- [jquery color](https://github.com/jquery/jquery-color/)\r\n- [取色插件集合](http://www.oschina.net/project/tag/287/color-picker)\r\n- [farbtastic 圆环＋正方形](https://github.com/mattfarina/farbtastic)\r\n- []()\r\n\r\n#### 16. 城市联动\r\n\r\n- [jquery.cityselect.js基于jQuery+JSON的省市或自定义联动效果](http://www.ijquery.cn/?p=360)\r\n- []()\r\n\r\n#### 17. 剪贴板\r\n\r\n- [剪贴板](https://github.com/zeroclipboard/zeroclipboard)\r\n- [clipboard 最新的剪切方案](http://zenorocha.github.io/clipboard.js/)\r\n- [不是Flash的剪贴板](https://github.com/zenorocha/clipboard.js)\r\n\r\n#### 18. 简繁转换\r\n\r\n- [简繁转换](https://github.com/BYVoid/OpenCC)\r\n\r\n#### 19. 表格 Grid\r\n\r\n- [facebook表格](http://facebook.github.io/fixed-data-table/)\r\n- [类似于Excel编辑表格-handsontable](http://handsontable.com/)\r\n- [bootstrap-table插件](http://bootstrap-table.wenzhixin.net.cn/)\r\n- [datatables](https://www.datatables.net/)\r\n\r\n#### 20. 在线演示\r\n\r\n- [js 在线编辑 - runjs](http://runjs.cn/)\r\n- [js 在线编辑 - jsbin](http://jsbin.com/)\r\n- [js 在线编辑 - codepen](http://codepen.io/)\r\n- [js 在线编辑 - jsfiddle](http://jsfiddle.net/)\r\n- [java 在线编辑 - runjs](http://ideone.com/)\r\n- [js 在线编辑 - hcharts](http://code.hcharts.cn/)\r\n- [js 在线编辑 - jsdm](http://jsdm.com/)\r\n- [sql 在线编辑 - sqlfiddle](http://sqlfiddle.com/)\r\n- [mozilla 在线编辑器](https://thimble.mozilla.org)\r\n\r\n#### 21. 播放器\r\n\r\n- [Html5 VideoPlayer](https://github.com/zmmbreeze/DeadSimpleVideoPlayer)\r\n\r\n#### 22. 粒子动画\r\n\r\n- [Proton 烟花](http://a-jie.github.io/Proton/#example)\r\n\r\n### 九. Nodejs\r\n\r\n- [nodejs 篇幅比较巨大](http://liuqing.pw/)\r\n- [Node.js 包教不包会](https://github.com/alsotang/node-lessons)\r\n- [篇幅比较少](http://www.rainweb.cn/article/category/Nodejs)\r\n- [node express 入门教程](http://www.w3cfuns.com/article-5598538-1-1.html)\r\n- [nodejs定时任务](http://my.oschina.net/u/568264/blog/193773)\r\n- [一个nodejs博客](http://60sky.com/)\r\n- [【NodeJS 学习笔记04】新闻发布系统](http://www.cnblogs.com/yexiaochai/p/3536547.html)\r\n- [过年7天乐，学nodejs 也快乐](http://www.cnblogs.com/qqloving/p/3541099.html)\r\n- [七天学会NodeJS](https://github.com/nqdeng/7-days-nodejs)\r\n- [Nodejs学习笔记（二）--- 事件模块](http://www.cnblogs.com/zhongweiv/p/nodejs_events.html)\r\n- [nodejs入门](http://www.cnblogs.com/liusuqi/p/3735491.html)\r\n- [angularjs nodejs](https://github.com/zensh/jsgen)\r\n- [从零开始nodejs系列文章](http://blog.fens.me/series-nodejs/)\r\n- [理解nodejs](http://debuggable.com/posts/understanding-node-js:4bd98440-45e4-4a9a-8ef7-0f7ecbdd56cb)\r\n- [nodejs事件轮询](http://blog.mixu.net/2011/02/01/understanding-the-node-js-event-loop/)\r\n- [node入门](http://www.nodebeginner.org/index-zh-cn.html)\r\n- [nodejs cms](http://ourjs.com/detail/53e1f281c5910a9806000001)\r\n- [Node初学者入门，一本全面的NodeJS教程](http://ourjs.com/detail/529ca5950cb6498814000005)\r\n- [NodeJS的代码调试和性能调优](http://www.barretlee.com/blog/2015/10/07/debug-nodejs-in-command-line/)\r\n\r\n### 十. 性能优化\r\n\r\n1. 常规优化\r\n\r\n    - [Javascript高性能动画与页面渲染](http://www.infoq.com/cn/articles/javascript-high-performance-animation-and-page-rendering)\r\n    - [移动H5前端性能优化指南](http://isux.tencent.com/h5-performance.html)\r\n    - [5173首页前端性能优化实践](http://ued.5173.com/?p=1731)\r\n    - [给网页设计师和前端开发者看的前端性能优化](http://www.uisdc.com/front-end-performance-for-web-designers-and-front-end-developers)\r\n    - [复杂应用的 CSS 性能分析和优化建议](http://www.orzpoint.com/profiling-css-and-optimization-notes/)\r\n    - [张鑫旭——前端性能](http://www.zhangxinxu.com/wordpress/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD/)\r\n    - [前端性能监控总结](http://www.xiaoqiang.org/javascript/font-end-performance-monitor.html)\r\n    - [网站性能优化之CSS无图片技术](http://udc.weibo.com/2013/05/%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E4%B9%8Bcss%E6%97%A0%E5%9B%BE%E7%89%87%E6%8A%80%E6%9C%AF/)\r\n    - [web前端性能优化进阶路](http://www.aliued.cn/2013/01/20/web%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%BF%9B%E9%98%B6%E8%B7%AF.html)\r\n    - [前端技术：网站性能优化之CSS无图片技术](http://my.eoe.cn/tuwandou/archive/4544.html)\r\n    - [浏览器的加载与页面性能优化](http://www.baiduux.com/blog/2011/02/15/browser-loading/)\r\n    - [页面加载中的图片性能优化](http://www.w3ctech.com/p/1503)\r\n    - [Hey——前端性能](http://www.feelcss.com/tag/%E5%89%8D%E7%AB%AF%E6%80%A7%E8%83%BD)\r\n    - [html优化](http://www.baiduux.com/blog/2010/03/15/html%E4%BC%98%E5%8C%96-2/)\r\n    - [99css——性能](http://www.99css.com/tag/%e6%80%a7%e8%83%bd)\r\n    - [Yslow——性能优化](http://www.yslow.net/category.php?cid=20)\r\n    - [YSLOW中文介绍](http://www.cnblogs.com/yslow/)\r\n    - [转一篇Yahoo关于网站性能优化的文章，兼谈本站要做的优化](http://www.360ito.com/article/40.html)\r\n    - [Yahoo!团队实践分享：网站性能](http://www.360doc.com/content/10/0928/09/2588264_56971287.shtml)\r\n    - [网站性能优化指南：什么使我们的网站变慢？](http://blog.jiasule.com/i/153)\r\n    - [网站性能优化实践，减少加载时间，提高用户体验](http://www.powereasy.net/helpyou/knowledge/ecommerce/9593.html)\r\n    - [浅谈网站性能优化 前端篇](http://www.umtry.com/archives/747.html)\r\n    - [前端重构实践之如何对网站性能优化？](http://www.adinnet.cn/blog/designview/2012-7-12/678.html)\r\n    - [前端性能优化：使用媒体查询加载指定大小的背景图片](http://www.gbin1.com/technology/javascript/20130708-front-end-performance-optimization-9/)\r\n    - [网站性能系列博文](http://www.mykuer.com/post/factors-that-affect-the-speed-of-web-site-open.html)\r\n    - [加载，不只是少一点点](http://tgideas.qq.com/webplat/info/news_version3/804/808/811/m579/201109/41355.shtml)\r\n    - [前端性能的测试与优化](http://mzhou.me/article/95310/)\r\n    - [分享网页加载速度优化的一些技巧？](http://www.gbin1.com/technology/html/20130217-tips-for-speed-up-page-loading/)\r\n    - [页面加载中的图片性能优化](http://www.f2es.com/images-bytes-opt/)\r\n    - [web前端优化(基于Yslow)](http://www.tcreator.info/webSchool/website/Front-end-Opt-Yslow.html)\r\n    - [网站性能优化工具大全](https://www.qianduan.net/website-performance-optimization-tool.html)\r\n    - [【高性能前端1】高性能HTML](http://www.alloyteam.com/2012/10/high-performance-html/)\r\n    - [【高性能前端2】高性能CSS](http://www.alloyteam.com/2012/10/high-performance-css/)\r\n    - [由12306谈谈网站前端性能和后端性能优化](http://coolshell.cn/articles/6470.html)\r\n    - [AlloyTeam——前端优化](http://www.alloyteam.com/webfrontend/%E5%89%8D%E7%AB%AF%E4%BC%98%E5%8C%96/)\r\n    - [毫秒必争，前端网页性能最佳实践](http://www.cnblogs.com/developersupport/p/3248695.html)\r\n    - [网站性能工具Yslow的使用方法](http://blog.sina.com.cn/s/blog_6e9d2e0701017kvu.html)\r\n    - [前端工程与性能优化（上）：静态资源版本更新与缓存](http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part1)\r\n    - [前端工程与性能优化（下）：静态资源管理与模板框架](http://www.infoq.com/cn/articles/front-end-engineering-and-performance-optimization-part2)\r\n    - [HTTPS连接的前几毫秒发生了什么](http://blog.jobbole.com/48369/)\r\n    - [Yslow](http://uicss.cn/yslow/#more-12319)\r\n    - [Essential Web Performance Metrics — A Primer, Part 1](http://blog.smartbear.com/web-performance/essential-web-performance-metrics-a-primer-part-1/)\r\n    - [Essential Web Performance Metrics — Part 2](http://blog.smartbear.com/performance/essential-web-performance-metrics-part-2/)\r\n    - [YUISlide,针对移动设备的动画性能优化](http://jayli.github.io/blog/data/2011/12/23/yuislide.html)\r\n    - [Improving Site Performance](http://joelglovier.com/improving-site-performance/)\r\n    - [让网站提速的最佳前端实践](http://segmentfault.com/a/1190000000367899)\r\n    - [Why Website Speed is Important](http://sixrevisions.com/web-development/why-website-speed-is-important/)\r\n    - [Need for Speed – How to Improve your Website Performance](https://www.devbridge.com/articles/need-for-speed-how-to-improve-your-website-performance/)\r\n    - [阿里无线前端性能优化指南 (Pt.1 加载期优化) ](https://github.com/amfe/article/issues/1)\r\n    - []()\r\n\r\n2. 优化工具\r\n\r\n    - [JavaScript 性能分析新工具 OneProfile](http://www.html-js.com/article/3083)\r\n    - [JavaScript 堆内存分析新工具 OneHeap](http://www.html-js.com/article/3091)\r\n\r\n3. 在线工具\r\n\r\n    - [google在线工具](https://developers.google.com/speed/pagespeed/insights/)\r\n    - [阿里测](http://www.alibench.com/)\r\n    - [阿里-免费测试服务](http://itest.aliyun.com/)\r\n    - [阿里-F2etest多浏览器兼容性测试解决方案](https://github.com/alibaba/f2etest)\r\n    - [js性能测试](http://jsperf.com/)\r\n    - []()\r\n    \r\n### 十一. 前端架构\r\n\r\n- [技术架构](http://www.zhihu.com/topic/19612641)\r\n- [前端架构](http://saito.im/note/The-Architecture-of-F2E/)\r\n- [如何成为前端架构师](http://www.zhihu.com/question/24092572)\r\n- [关于前端架构-张克军](http://hikejun.com/sharing/2010webrebuild/?file=fe-infrastructure.html)\r\n- [百度腾讯offer比较（腾讯游戏VS百度基础架构）](http://www.zhihu.com/question/25583350)\r\n- []()\r\n\r\n\r\n### 十二. 个人作品\r\n\r\n#### 1. 推荐作品\r\n\r\n- [winter代码片段需要翻墙](https://gist.github.com/wintercn)\r\n- [fgm](http://www.fgm.cc/learn/)\r\n- [岑安作品集](https://github.com/hongru/hongru.github.com)\r\n- [当耐特demo集合](http://kmdjs.github.io/)\r\n- [米空格 js作品](http://www.laoshu133.com/Lab/)\r\n- [myFocus](http://koen301.github.io/)\r\n- [SeaJS组件库](http://panxuepeng.github.io/seajslib/)\r\n- [颜海镜作品](http://yanhaijing.com/myProject/)\r\n- [脚儿网作品](http://jo2.org/category/myworks/)\r\n- [javascript个人作品](http://www.cnitblog.com/yemoo/category/3107.html)\r\n- [妙味的雷东升游戏作品](http://bbs.miaov.com/forum.php?mod=viewthread&tid=7790)\r\n- [javascript作品集](http://bbs.csdn.net/topics/380227212)\r\n- [云五笔，灰度产生生成工具](https://github.com/TooBug/works)\r\n- [项目主页](http://koen301.github.io/)\r\n- [个性的作品主页](http://zaole.net/)\r\n- [播放器](http://static.tingall.com/v2/player/)\r\n- [ucren js demos 集](http://ucren.com/blog/demos)\r\n- [智能社](http://www.zhinengshe.com/works_list.html)\r\n- [实例陈列架](http://demos.shizuwu.cn/)\r\n- [zoye demo](http://zoye.sinaapp.com/demo)\r\n- [王员外](http://lab.yuanwai.wang/)\r\n- [平凡](http://pingfan1990.sinaapp.com)\r\n- [jyg 游戏案例](http://www.lovewebgames.com/)\r\n- [很多jquery插件](http://www.helloweba.com/list.html)\r\n- [不羁虫 - soJs 作品系列](http://www.bujichong.com/sojs/api/index.html)\r\n- [frozenui](http://frozenui.github.io/case.html)\r\n- [黑白棋](http://js-game.github.io/othello/)\r\n- [fromone](http://yansm.github.io/fromone/index.html)\r\n\r\n#### 2. 群员作品\r\n\r\n- [MDialog - [合肥-M.J]](http://demo.webjyh.com/)\r\n- [轮播图 - [上海－冷静]](http://sandbox.runjs.cn/show/do6zlrrk )\r\n- [[广州—坚壳]](http://www.replace5.com/)\r\n- [[成都 - 无痕]　感恩节专题](http://www.seejs.com/demos/)\r\n- [[球霸天]](http://hacke2.github.io/works)\r\n- [[北京-小数]](http://www.cnblogs.com/mcat/)\r\n- [[ptf] Magix 工具](http://thx.github.io/magix/)\r\n- [[杭州-Pft] Magix 基于 MVC 结构和 Hash 驱动的 OPOA（One Page One Application）应用](http://thx.github.io/magix/)\r\n- [[上海-剧中人]-实验室](http://bh-lay.com/labs/)\r\n- [[上海-豪情 ] 作品集合](http://jikeytang.github.io)\r\n- [[成都-feeling]](http://guoshan.sinaapp.com/)\r\n- [[上海-angela]](http://www.cnblogs.com/liyunhua/)\r\n- [[海南-hank]作品](http://hcjp.github.io/work/demo/)\r\n- [[上海-张力]博客](https://github.com/yibuyisheng/blogs/issues)\r\n- [[上海-zenki]作品](http://zkske121.github.io/)\r\n- [移动端图案解锁](http://01google.sinaapp.com/locker.html)\r\n- [[合肥-M.J] - MPreview 移动端图片预览组](https://github.com/webjyh/MPreview.mobile)\r\n- [[合肥-M.J] - Mexam 移动端在线做题组](https://github.com/webjyh/Mexam)\r\n- [[北京-苏瑞] - dancer小人](http://letyougo.github.io/dancer/)\r\n- [[上海-玄沐]- 个人网站](http://k.swao.cn/js/)\r\n- [[厦门-二哲]- 个人博客](http://www.meckodo.com/)\r\n\r\n#### 3. 国外大牛精品\r\n\r\n- [pazguille](http://pazguille.me/)\r\n\r\n### 十三. 简历模板\r\n\r\n- [不错的个人简历](http://learnshare.github.io/about/index.html)\r\n- [简历](http://hcy2367.github.io/resume/)\r\n- [张伦](http://ncuey.sinaapp.com/CrispElite/ )\r\n- [简历](https://github.com/hacke2/ResumeSample)\r\n- [翁天信](http://blog.dandyweng.com/2013/07/how-my-website-was-created/)\r\n- [动画方式的简历](http://www.webhek.com/misc/interactive-resume/)\r\n- [组件丰富简历](http://www.linqing07.com/resume.html)\r\n- [简历池](http://www.mojianli.com/resume/view)\r\n- [haorooms博客](http://www.haorooms.com/about)\r\n- [Justin Young](http://cv.youngdze.com/)\r\n- []()\r\n\r\n### 十四. 面试题\r\n\r\n- [那几个月在找工作（百度，网易游戏）](http://www.nowcoder.com/discuss/3196)\r\n- [2014最新面试题](http://www.html-js.com/article/1743)\r\n- [阿里前端面试题](http://www.w3cfuns.com/thread-5598563-2-1.html)\r\n- [2016校招内推 -- 阿里巴巴前端 -- 三面面试经历 ](http://www.cnblogs.com/imwtr/p/4685546.html)\r\n- [腾讯面试题](http://www.w3cfuns.com/article-5599657-1-1.html)\r\n- [年后跳槽那点事：乐视+金山+360面试之行](http://www.cnblogs.com/lvdabao/p/3660707.html)\r\n- [阿里前端面试题上线](http://fatesinger.com/2722.html)\r\n- [拉勾网js面试题](http://www.cnblogs.com/52cik/p/js-question-lg.html)\r\n- [前端面试](http://www.cnblogs.com/allenxing/p/3724382.html)\r\n- [Web开发笔试面试题 大全](http://mianshiti.diandian.com/)\r\n- [前端开发面试题](http://segmentfault.com/a/1190000000465431)\r\n- [2014最新前端面试题](https://github.com/markyun/My-blog/tree/master/Front-end-Developer-Questions)\r\n- [百度面试](https://github.com/fex-team/interview-questions)\r\n- [面试题](http://www.w3cfuns.com/forum.php?mod=forumdisplay&fid=51&filter=typeid&typeid=177)\r\n- [前端工作面试问题](https://github.com/darcyclarke/Front-end-Developer-Interview-Questions/tree/master/Chinese)\r\n- [前端开发面试题](http://segmentfault.com/a/1190000000465431)\r\n- [5个经典的前端面试问题](http://ourjs.com/detail/5%E4%B8%AA%E7%BB%8F%E5%85%B8%E7%9A%84%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98)\r\n- [最全前端面试问题及答案总结 ](http://segmentfault.com/a/1190000002562454)\r\n- [如何面试一名前端开发工程师？](http://www.html-js.com/article/Large-search-front-team-column%202961)\r\n- [史上最全 前端开发面试问题及答案整理](https://github.com/hawx1993/Front-end-Interview-questions)\r\n- [前端实习生面试总结 ](http://www.cnblogs.com/xiaoruo/p/4665163.html)\r\n- [史上最全 前端开发面试问题及答案整理](https://github.com/hawx1993/Front-end-Interview-questions)\r\n- [BAT及各大互联网公司2014前端笔试面试题：JavaScript篇](http://blog.jobbole.com/78738/)\r\n- [前端开发面试题大收集](https://github.com/paddingme/Front-end-Web-Development-Interview-Question)\r\n- [收集的前端面试题和答案](https://github.com/qiu-deqing/FE-interview)\r\n- [如何面试前端工程师](http://www.zhihu.com/question/19568008)\r\n- [前端开发面试题](https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions/Questions-and-Answers/README.md)\r\n- [牛客网-笔试面经](http://www.nowcoder.com/discuss?type=2)\r\n\r\n### 十五. iconfont\r\n\r\n- [中文字体](http://www.zhihu.com/question/21253343)\r\n- [淘宝字库](http://iconfont.cn)\r\n- [字体](http://mux.alimama.com/fonts)\r\n- [制作教程](http://iconfont.cn/help/platform.html)\r\n- [zhangxinxu-icommon](http://www.zhangxinxu.com/wordpress/?s=icomoon)\r\n- [icommon](https://icomoon.io/app/)\r\n- [用字体在网页中画ICON图标(推荐教程)](http://imooc.com/learn/243)\r\n- [字体压缩工具](http://font-spider.org/) 感谢初级群　[深圳-小鱼] 的推荐\r\n\r\n### 十六. 开发工具类\r\n\r\n1. 前端开发工具\r\n\r\n    - [IntelliJ IDEA 简体中文专题教程](https://github.com/judasn/IntelliJ-IDEA-Tutorial)\r\n    - [Webstorm,InterllIdea,Phpstorm](http://t.cn/8kZZ1Uy)\r\n    - [SublimeText](https://github.com/jikeytang/sublime-text)\r\n    - [Atom](https://atom.io/)\r\n    - [visual studio code](https://code.visualstudio.com/)\r\n\r\n2. Chrome, Firebug, Filddle 调试\r\n\r\n    1. Fiddler\r\n        - [Fiddler调式使用知多少(一)深入研究](http://www.cnblogs.com/tugenhua0707/p/4623317.html)\r\n        - [微信fiddle](http://www.cnblogs.com/strick/p/4570006.html)\r\n        - [微信fiddle](http://gaoboy.com/article/26.html)\r\n        - []()\r\n    \r\n    2. Chrome\r\n        - [Google Chrome 官方](https://developer.chrome.com/devtools)\r\n        - [Chrome - 基础](http://www.cnblogs.com/constantince/p/4565261.html)\r\n        - [Chrome - 进阶](http://www.cnblogs.com/constantince/p/4579121.html)\r\n        - [Chrome - 性能](http://www.cnblogs.com/constantince/p/4585983.html)\r\n        - [Chrome - 性能进阶](http://www.cnblogs.com/constantince/p/4607497.html)\r\n        - [Chrome - 移动](http://www.cnblogs.com/constantince/p/4624241.html)\r\n        - [Chrome - 使用技巧](http://www.cnblogs.com/liyunhua/p/4544738.html)\r\n        - [Chrome - Console控制台不完全指南](http://www.cnblogs.com/Wayou/p/chrome-console-tips-and-tricks.html)\r\n        - [Chrome - Workspace使浏览器变成IDE](http://c7sky.com/chrome-devtools-workspace.html)\r\n        - [network面板](http://www.html-js.com/article/Nothing-blind%202975)\r\n        - [chrome开发工具快捷键](http://anti-code.com/devtools-cheatsheet/)\r\n        - [chrome调试工具常用功能整理](http://www.html-js.com/article/2327)\r\n        - [Chrome 开发工具 Workspace 使用](http://www.iinterest.net/2014/05/09/chrome-dev-tool-workspace/)\r\n        - [Chrome神器Vimium快捷键学习记录 ](http://www.cppblog.com/deercoder/archive/2011/10/22/158886.html)\r\n        - [sass调试-w3cplus](http://www.w3cplus.com/sassguide/debug.html)\r\n        - [如何更专业的使用Chrome开发者工具-w3cplus](http://www.w3cplus.com/tools/how-to-use-chrome-devtools-like-a-pro.html)\r\n        - [chrome调试canvas](http://sentsin.com/web/253.html)\r\n        - [chrome profiles1](https://developer.chrome.com/devtools/index)\r\n        - [chrome profiles2](http://h5dev.uc.cn/article-25-1.html)\r\n        - [chrome profiles3](http://www.oschina.net/translate/performance-optimisation-with-timeline-profiles)\r\n        - [chrome移动版调试](https://developer.chrome.com/devtools/docs/mobile-emulation)\r\n        - [chrome调试](http://ued.taobao.org/blog/2012/06/debug-with-chrome-dev-tool/)\r\n        - [chrome的调试](http://www.cnblogs.com/QLeelulu/archive/2011/08/28/2156402.html)\r\n        - [chrome console 命令详解](https://developer.chrome.com/devtools/docs/commandline-api)\r\n        - [查看事件绑定1](http://www.cnblogs.com/leonkao/p/3809655.html)\r\n        - [查看事件绑定2](http://www.cnblogs.com/xiaoyao2011/p/3447421.html)\r\n        - [神器——Chrome开发者工具(一)](http://segmentfault.com/a/1190000000683599)\r\n        - [奇趣百科性能优化(Chrome DevTools 中的 Timeline Profils 等工具使用介绍)](https://xinranliu.me/2015-05-22-qiqu-performance/)\r\n        - [chrome 开发者工具的 15 个小技巧](http://frontenddev.org/link/15-tips-of-chrome-developer-tools.html)\r\n        - [Chrome开发者工具不完全指南](http://1ke.co/course/361)\r\n        - [Chrome 开发者工具使用技巧](http://segmentfault.com/a/1190000003882567)\r\n\r\n    3. Firebug\r\n        - [firebug视频教程](http://www.imooc.com/learn/137)\r\n        - [firefox 模拟器](https://developer.mozilla.org/zh-CN/docs/Tools/WebIDE)\r\n        - [console.log 命令详解](http://www.cnblogs.com/ctriphire/p/4116207.html)\r\n        - [Firebug入门指南](http://www.ruanyifeng.com/blog/2008/06/firebug_tutorial.html)\r\n        - [Firebug控制台详解](http://www.ruanyifeng.com/blog/2011/03/firebug_console_tutorial.html)\r\n        - []()\r\n    \r\n    4. 移动,微信调试\r\n        - [浏览器端调试安卓](https://openstf.github.io/)\r\n        - [移动端前端开发调试](http://yujiangshui.com/multidevice-frontend-debug/)\r\n        - [使用 Chrome 远程调试 Android 设备](https://github.com/yujiangshui/CN-Chrome-DevTools/blob/remote-debugging/md/Use-Tools/remote-debugging.md)\r\n        - [mac移动端调试](http://plus.uc.cn/document/webapp/doc5.html)\r\n        - [mac移动端调试](http://www.mihtool.com/)\r\n        - [无线调试攻略](http://thx.github.io/mobile/debugging-in-mobile/)\r\n        - [无线调试攻略](http://yanhaijing.com/mobile/2014/12/17/web-debug-for-mobile/)\r\n        - [屌爆了,完美调试 微信webview(x5)](http://www.jianshu.com/p/ccf124f1f74b)\r\n        - [微信调试的那些事](http://liyaodong.com/2015/07/06/%E5%BE%AE%E4%BF%A1%E8%B0%83%E8%AF%95%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/)\r\n        - [远程console](http://jsconsole.com/)\r\n        - [微信调试工具](http://blog.qqbrowser.cc/)\r\n        - [各种真机远程调试方法汇总](https://github.com/jieyou/remote_inspect_web_on_real_device)\r\n    \r\n    5. iOS Simulator\r\n        - [Simulator](https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/iOS_Simulator_Guide/Introduction/Introduction.html)\r\n        - [Xcode中的iOS模拟器(iOS Simulator)的介绍和使用心得](http://www.crifan.com/intro_ios_simulator_in_xcode_and_usage_summary/)\r\n\r\n3. img\r\n\r\n    - [loading img](http://preloaders.net/en/circular)\r\n    - [智图-图片优化平台](http://zhitu.isux.us/)\r\n    - [在线png优化](https://tinypng.com/)\r\n\r\n4. 生成二维码\r\n\r\n    - [生成二维码](http://cli.im/)\r\n    \r\n5. 浏览器同步\r\n    - [puer](https://github.com/leeluolee/puer)\r\n    - [liveReload](http://livereload.com/)\r\n    - [f5](http://getf5.com/)\r\n    - [File Watchers](http://geek100.com/2608/)\r\n\r\n6. 在线PPT制作\r\n    - [nodePPT](http://js8.in/2013/11/16/%E6%8E%A8%E8%8D%90nodeppt%EF%BC%9A%E4%BD%BF%E7%94%A8markdown%E8%AF%AD%E6%B3%95%E6%9D%A5%E5%86%99%E7%BD%91%E9%A1%B5ppt/)\r\n    - [PPT](https://github.com/ksky521/nodePPT)\r\n    - [reveal](https://github.com/hakimel/reveal.js/)\r\n    - [slippy](https://github.com/Seldaek/slippy)\r\n\r\n### 十七. 前端导航网站\r\n\r\n- [界面清爽的前端导航](http://uxbees.com/index.html)\r\n- [前端导航](http://whycss.com/)\r\n- [前端网址导航](http://www.daqianduan.com/nav)\r\n- [前端名录](http://sentsin.com/daohang/)\r\n- [前端导航](http://123.jser.us/)\r\n- [前端开发资源](http://www.css88.com/nav/)\r\n- [网址导航](http://www.haourl.cn/)\r\n- [前端开发仓库 - 众多效果的收集地](http://code.ciaoca.com/) \r\n- [前端资源导航](https://github.com/jnoodle/f2e-collect)\r\n- [F2E 前端导航](http://f2e.im/static/pages/nav/index.html)\r\n\r\n### 十八. 常用CDN\r\n\r\n- [新浪CDN](http://lib.sinaapp.com/)\r\n- [百度静态资源公共库](http://cdn.code.baidu.com/)\r\n- [360网站卫士常用前端公共库CDN服务](http://libs.useso.com/)\r\n- [Bootstrap中文网开源项目免费 CDN 服务](http://www.bootcdn.cn/)\r\n- [开放静态文件 CDN - 七牛](http://staticfile.org/)\r\n- [CDN加速 - jq22](http://www.jq22.com/cdn/)\r\n- [jQuery CDN](http://code.jquery.com/)\r\n- [Google jQuery CDN](http://www.google-jquery-cdn.com/)\r\n- [微软CDN](http://www.asp.net/ajax/cdn)\r\n\r\n### 十九. Git,SVN,Github\r\n\r\n1. Git\r\n\r\n    - [git-scm](http://git-scm.com/)\r\n    - [廖雪峰-Git教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)\r\n    - [git-for-windows](https://git-for-windows.github.io/)\r\n    - [GitHub 添加 SSH keys](http://daemon369.github.io/git/2015/03/10/add-ssh-keys-for-github/)\r\n    - [gogithub](http://www.worldhello.net/gotgithub/index.html)\r\n    - [git常规命令练习](http://pcottle.github.io/learnGitBranching/)\r\n    - [git的资料整理](https://github.com/xirong/my-git)\r\n    - [我所记录的git命令（非常实用）](http://www.cnblogs.com/fanfan259/p/4810517.html)\r\n    - [企业开发git工作流模式探索部分休整](https://github.com/xirong/my-git/blob/master/git-workflow-tutorial.md)\r\n    - [GitHub 漫游指南](https://github.com/phodal/github-roam)\r\n    - [GitHub秘籍](https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md)\r\n    - [使用git和github进行协同开发流程](http://livoras.com/post/28)\r\n    - [动画方式练习git](http://onlywei.github.io/explain-git-with-d3/)","title":"前端资源教程","last_reply_at":"2016-11-17T02:11:58.510Z","good":true,"top":false,"reply_count":134,"visit_count":64696,"create_at":"2016-03-21 08:22","author":{"loginname":"i5ting","avatar_url":"https://avatars.githubusercontent.com/u/3118295?v=3&s=120"}},{"id":"582c5597892500ee7867bf90","author_id":"55324cfa1b9662da568db910","tab":"ask","content":"现在有个需求就是在存储层加一层缓存(有的业务已经有2层缓存)。\r\n但是我又不想在业务逻辑里写\r\n```\r\nif( in cache ){\r\n\t//read from cache\r\n}else{\r\n\t//read from db\r\n}\r\n```\r\n这类逻辑。我更期望我业务层在取数据的时候不要关心这些数据是在缓存还是DB.\r\n有现成的组件或是框架么? 希望有处理过这类问题经验的朋友不吝赐教","title":"如何做到缓存层对业务层透明","last_reply_at":"2016-11-17T02:04:25.760Z","good":false,"top":false,"reply_count":5,"visit_count":140,"create_at":"2016-11-16 20:48","author":{"loginname":"bugall","avatar_url":"https://avatars.githubusercontent.com/u/8531791?v=3&s=120"}},{"id":"5817f6d2b37ee8fb339789b5","author_id":"58116efc1a9a7d990953119c","tab":"job","content":"[搜狐快站](http://www.kuaizhan.com/)是搜狐推出的自助建站云端工具，通过可视化拖拽的方式就能快速建立移动站点和制作HTML5海报，并支持一键生成APP。快站提供了国内最强大的建站与营销功能，同时拥有完善的移动电商、用户社区、微信公众号管理等功能，助力企业与站长的互联网营销。\r\n\r\n<hr>\r\n<b>我们在做什么？</b>\r\n\r\n     企业移动服务云平台。\r\n     过去的两年里，我们移动服务提供者的技术门槛一降，再降。\r\n     现在，只需点下鼠标，输几个文字，一个集社区、电商、文章、海报、微信公众号为一体的移动站点就可以提供服务了，而且还有生成App！\r\n     我们的目标是：解决中国移动互联网服务的\"最后一公里\"\r\n\r\n<hr>\r\n\r\n<b>招聘职位：</b>\r\n\r\n<b>Web服务器端研发实习</b>\r\n\r\n工作内容：\r\n\r\n     快站平台功能模块设计、开发与更新迭代\r\n     HTML5 相关应用研发\r\n\r\n任职要求：\r\n\r\n     1. 熟练掌握 PHP、JavaScript、Python、Java 中的任何一门语言；\r\n     2. 掌握 HTML/CSS/JavaScript 等前端开发技术；\r\n     3. 掌握HTTP，TCP/IP等Web标准协议；\r\n     4. 计算机软件相关专业背景，具备互联网相关项目经验；\r\n     5. 211/985 院校学生，每周实习时间至少4天\r\n\r\n<hr>\r\n\r\n* 投递邮箱：[chengliu@sohu-inc.com](mailto:chengliu@sohu-inc.com) （请在邮件标题中注明：姓名-学校-应聘职位）\r\n* 办公地点：北京市海淀区科学院南路搜狐媒体大厦","title":"[北京] [实习] Web服务器端研发（Node.js方向） <搜狐-快站-平台组>","last_reply_at":"2016-11-17T02:00:40.040Z","good":false,"top":false,"reply_count":5,"visit_count":182,"create_at":"2016-11-01 09:58","author":{"loginname":"aimicheng","avatar_url":"https://avatars.githubusercontent.com/u/710457?v=3&s=120"}},{"id":"582bd46dc1d3b2b57db5e309","author_id":"580f3276eae2a24f34e67ebc","tab":"ask","content":"如果用户没加www，如何在程序上自动加www？","title":"关于地址自动加www的问题","last_reply_at":"2016-11-17T01:53:39.312Z","good":false,"top":false,"reply_count":12,"visit_count":247,"create_at":"2016-11-16 11:37","author":{"loginname":"liangweidong","avatar_url":"https://avatars.githubusercontent.com/u/8297528?v=3&s=120"}},{"id":"582be0c6e885ce5a39382913","author_id":"57fdeeb00bab808265185cf6","tab":"ask","content":"想请问下用express4作为企业级应用的开发框架适合吗？\r\n提供restful api，但貌似会加入页面。","title":"关于express4","last_reply_at":"2016-11-17T01:52:31.537Z","good":false,"top":false,"reply_count":1,"visit_count":155,"create_at":"2016-11-16 12:29","author":{"loginname":"Sily-P","avatar_url":"https://avatars.githubusercontent.com/u/16346680?v=3&s=120"}},{"id":"58172a38eae2a24f34e680c5","author_id":"57ce761480ad316647adcc14","tab":"ask","content":"请问各位，在node端实现图片验证码除了可以用ccap模块之外还能有其他的模块实现吗。。之前的ccap模块实现之后线上部署很麻烦，打算换一个模块","title":"node端实现图片验证码","last_reply_at":"2016-11-17T01:42:38.923Z","good":false,"top":false,"reply_count":9,"visit_count":482,"create_at":"2016-10-31 19:25","author":{"loginname":"Ocean1509","avatar_url":"https://avatars.githubusercontent.com/u/15245038?v=3&s=120"}},{"id":"582bc77ec1d3b2b57db5e2fa","author_id":"5805ce27487e1e4578afb5de","tab":"share","content":"koa 项目常用库：\r\n1. koa-body https://github.com/dlau/koa-body; \r\n    koa-router https://github.com/alexmingoia/koa-router;\r\n    koa-json https://github.com/koajs/json;\r\n    koa-static https://github.com/koajs/static;\r\n    koa-timeout https://github.com/wejendorp/koa-timeout;\r\n    koa-session  https://npm.taobao.org/package/koa-session;  持久存储，\r\n    koa-session-redis3  \r\n    redis  https://npm.taobao.org/package/redis;\r\n    ioredis : https://npm.taobao.org/package/ioredis;  推荐用这个，直接支持promise\r\n    moment :  http://momentjs.com/docs/   日期操作的一个库\r\n2.  node-bunyan  一个日志打印的模块   https://github.com/trentm/node-bunyan\r\n3.  bluebird  https://npm.taobao.org/package/bluebird  http://bluebirdjs.com/docs/getting-started.html\r\n4.  co https://npm.taobao.org/package/co\r\n5.  lodash  http://lodashjs.com/docs/\r\n6.  sequelize  http://docs.sequelizejs.com/en/latest/     注意，这个模块以来pg模块，专门操作postgresql数据库的node客户端\r\n7.  mongoose  https://npm.taobao.org/package/mongoose\r\n http://mongoosejs.com/\r\n8.  支持koa的mongdb orm库： http://mongorito.com/\r\n9.  koa-request  https://npm.taobao.org/package/koa-request\r\n10. config  https://npm.taobao.org/package/config 一个组织项目配置文件的的模块","title":"Koa的周边环境","last_reply_at":"2016-11-17T01:42:01.433Z","good":false,"top":false,"reply_count":5,"visit_count":191,"create_at":"2016-11-16 10:42","author":{"loginname":"donghuaren","avatar_url":"https://avatars.githubusercontent.com/u/18388782?v=3&s=120"}},{"id":"582ac5aac1d3b2b57db5e2bf","author_id":"50b5bc5d637ffa4155091236","tab":"ask","content":"```\r\n1\r\nvar param=['name,mobile,qq,topic,content',['user','>userinfo|uid=ID','>tweet|user_id=ID']];\r\n\r\n\r\n2\r\nvar param={'user':'*',\r\n'userinfo':'mobile,qq|<uid=ID',\r\n'tweet':'title,cotent|>user_id=ID'}\r\n\r\n\r\n\r\n```","title":"多表关联查询,哪种格式更适合传参数?","last_reply_at":"2016-11-17T01:11:17.059Z","good":false,"top":false,"reply_count":1,"visit_count":115,"create_at":"2016-11-15 16:22","author":{"loginname":"yakczh","avatar_url":"https://avatars.githubusercontent.com/u/6591466?v=3&s=120"}},{"id":"5829631dd3abab717d8b4c2c","author_id":"575283579d7997dd7060a10f","tab":"share","content":"# 用Node和Express打造restful API\r\n\r\n原文： [Build a RESTful API Using Node and Express 4](https://scotch.io/tutorials/build-a-restful-api-using-node-and-express-4#our-application)\r\n(原作者 Chris Sevilleja)\r\n\r\n2016年11月14日 杜梁 翻译。(一些地方加入了自己补充内容)\r\n\r\n这是我的第2篇翻译，据上篇翻译差不多5个月了，前几天发现github的star还在涨，说明还是帮助到小伙伴儿了，这就是我继续翻译的动力啊，心里高兴！\r\n\r\n**CNodejs的小伙伴儿如果你觉得我的翻译能给你带来点帮助，那就给我点个Star鼓励一下吧^_^**\r\n[这里是我的github，我会持续更新的！](https://github.com/starduliang/blog)\r\n\r\n## 目录：\r\n\r\n* 1.列出需求\r\n* 2.起步走，搭建基础设施\r\n* 3.启动server测试\r\n* 4.数据库和Bear Model\r\n* 5.Express Router 和 routes（路由）\r\n* 6.路由中间件\r\n* 7.配置基本路由\r\n* 8.为单条纪录创建路由\r\n* 9.总结\r\n\r\n## 正文\r\n### 1.列出需求\r\n下面要打造的REST风格的应用有如下需求：\r\n\r\n* 处理CRUD（下面讲用bears）\r\n* 加一个标准的URL（http://example.com/api/bears）和(http://example.com/api/bears/:bear_id)\r\n* 用相应的http的动词达到rest效果（GET, POST, PUT, DELETE） \r\n* 返回JSON数据\r\n* 在控制台打印所有的请求\r\n\r\n上面的名词bears可以换成任意名词users，students，books等。\r\n\r\n### 2.起步走，搭建基础设施\r\n下面列出了所有创建API需要的文件。需要完成这几个步骤：**定义Node packages（定义Node应用的包结构）， 用Express启动server， 定义model（数据模型）， 用Express定义路由** ，最后测试我们的API\r\n\r\n```javascript\r\n- app/\r\n    ----- models/\r\n    ---------- bear.js  // bear model\r\n    - node_modules/     // 由npm自动创建. 这里放的是应用依赖的外部模块\r\n    - package.json      // 描述应用的信息（应用名，作者信息，启动／测试／发布等脚本入口和依赖的外部模块）\r\n    - server.js         // 配置应用和应用的路由\r\n\r\n```\r\n\r\n#### 定义Node应用包结构\r\n\r\n当我们创建一个应用的时候，我们不用自己写全部的代码，有一些现有的模块只需要我们倒入到我们的应用我们就可以方便使用。Node 应用里 package.json文件里定义了Node应用依赖的外部模块。\r\n\r\n```\r\n// package.json\r\n//name是Node应用的名字，main是Node应用的入口文件，当启动server的时候Node会从这个文件开始调用。dependencies定义了应用依赖的外部模块，如果大家熟悉Java的maven的话一看就应该明白，相当于maven的pom.xml文件。\r\n{\r\n    \"name\": \"node-api\",\r\n    \"main\": \"server.js\",\r\n    \"dependencies\": {\r\n        \"express\": \"~4.0.0\",\r\n        \"mongoose\": \"~3.6.13\",\r\n        \"body-parser\": \"~1.0.1\"\r\n    }\r\n}\r\n\r\n```\r\nexpress是啥？epress是在Node基础上搭建的web框架，可以方便配置路由，定义中间件，错误处理，渲染模版等。mongoose是一个用于Node应用上的ORM框架，什么叫ORM（Object-relational mapping），英文字面意思是Object（程序对象）和Relation（关系型数据库）的映射，就是应用中的对象与数据库的纪录对应，应用中的类与数据库中的表对应。body-parser是一个中间件，会帮我们解析post request的body部分，然后我们在处理请求的时候可以直接使用req.body获得rquest的body部分。\r\n\r\n#### 安装Node依赖的模块\r\n进入应用文件夹的根目录，输入如下命令，这一步会package.json文件的配置安装外部模块。安装的外部模块会出现在根目录下的node_modules文件夹下\r\n#### 搭建server（server.js文件）\r\n启动server的时候Node会根据package.json文件中的main找到这个文件开始执行整个web应用。\r\n\r\n```\r\n// server.js\r\n\r\n// BASE SETUP\r\n// =============================================================================\r\n\r\n// 加载express\r\nvar express    = require('express');        // call express\r\nvar app        = express();                 // 获得express定义的app，app对象此时代表整个web应用\r\nbodyParser = require('body-parser');\r\n\r\n// 给app配置bodyParser中间件\r\n// 通过如下配置再路由种处理request时，可以直接获得post请求的body部分\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\n\r\nvar port = process.env.PORT || 8080;        // set our port\r\n\r\n// API路由配置\r\n// =============================================================================\r\nvar router = express.Router();              // 获得express router对象\r\n// 用get动词访问 http://localhost:8080/api\r\nrouter.get('/', function(req, res) {\r\n    res.json({ message: 'hooray! welcome to our api!' });   \r\n});\r\n\r\n\r\n// 注册路由\r\n// 所有的路由会加上“／api”前缀\r\napp.use('/api', router);\r\n\r\n// 启动server\r\n// =============================================================================\r\n//开始监听端口\r\napp.listen(port);\r\nconsole.log('Magic happens on port ' + port);\r\n```\r\n以上做了如下事情\r\n\r\n#### 基本设置：\r\n通过require获取需要使用的模块，首先获取express，然后通过express模块获取代表当前web应用的app实例，然后在app中把我们需要的中间件bodyParser注册到其中，然后设置web应用的监听的接口。\r\n#### 配置路由\r\n这块通过express获取当前web应用的Router实例，然后在router上面注册上我们的路由，然后在以中间件的形式注册到web 应用上。\r\n#### 启动server\r\n让web应用监听指定的接口，启动之后，就可以测试我们的web应用了。\r\n\r\n\r\n### 3.启动server然后测试\r\n这一步启动我们的server然后向之前定义的路由发送请求，看server是否会有响应，命令行进入到应用的根目录，执行如下命令行启动server\r\n\r\n```\r\nnode server.js\r\n```\r\n\r\n如下会看到，Node通过express创建一个server\r\n\r\n![Alt](https://starduliang.github.io/blog/2016.11/node_rest_api/node-api-start-server.png)\r\n\r\n如上server已经跑起来了，接下来测试一下\r\n#### 用postman来测试\r\npostman真的很好用([这里有篇文章给大家参考](http://jingyan.baidu.com/article/90808022ff18defd91c80f9a.html)，[这个是postman官网](https://www.getpostman.com/)),填上访问的url，选择HTTP动词（get, post, delete, put, patch等），也可以指定要传递的参数。\r\n下面看一下怎么用\r\n![Alt](https://starduliang.github.io/blog/2016.11/node_rest_api/postman-rest-client-node-api.png)\r\n要把请求发出去总共最多分三步: 1.填入URL，2.需选择http动词，3.填入传递参数（可选），非常之简单。\r\n\r\n输入http://localhost:8080/api，选择get方法，点击send\r\n\r\n![Alt](https://starduliang.github.io/blog/2016.11/node_rest_api/node-api-postman-test.png)\r\n\r\n干得漂亮，如图response的数据已经返回了，下面会封装上bears的crud操作。\r\n\r\n### 4.数据库和Bear Model\r\n这一块儿不做太多详细说明，简单说一下，然后进入下一阶段（配置路由打造CRUD的API），要做的大概分两步: 1.创建MongoDb数据库，然后让我们的web应用与数据库连接，2.在web应用里用mongoose创建一个bear的model，然后通过这个model跟数据库交互。\r\n#### 创建数据库，用web应用连接数据库\r\n创建数据库，并启动数据库后（安装mongodb[参考这里](http://jingyan.baidu.com/article/d5c4b52bef7268da560dc5f8.html)），会得到一个数据库暴露给外部应用访问的URL，我们用这个URL连接数据，代码形式如下\r\n\r\n```\r\n// server.js\r\n\r\n// BASE SETUP\r\n// =============================================================================\r\n...\r\nvar url = \"\" // 连接mongodb的url\r\nvar mongoose = require('mongoose');//加载mongoose模块\r\nmongoose.connect(url); // 连接数据库\r\n...\r\n\r\n```\r\n\r\n上面代是用mongoose连接数据库，下面我们来用mongoose创建的model来操作bears\r\n#### BEAR MODEL  \r\n下面定义bear 的model 有一个name字段\r\n\r\n```\r\n// app/models/bear.js\r\n\r\nvar mongoose   = require('mongoose');\r\nvar Schema     = mongoose.Schema;\r\n\r\nvar BearSchema = new Schema({\r\n    name: String\r\n});\r\n\r\nmodule.exports = mongoose.model('Bear', BearSchema);\r\n\r\n```\r\n在server.js中加载如上文件，来使用bear的model，在server.js中加上如下一行代码\r\n\r\n```\r\n// server.js\r\n\r\n// BASE SETUP\r\n// =============================================================================\r\n\r\n...\r\n\r\nvar Bear     = require('./app/models/bear');\r\n\r\n...\r\n```\r\n现在web应用的基本搭建已经差不多了，下面用路由来配置我们的API。\r\n\r\n### 5.Express Router 和 routes（路由）\r\n下面用Express Router来处理routes，如下是一个http动词列表\r\n\r\n| Route               | HTTP Verb    | Description     |\r\n| ------------------- |-------------:| ---------------:|\r\n| /api/bears          | GET          | 获取所有的bears   | \r\n| /api/bears          | POST         | 创建一条bear     |\r\n| /api/bears/:bear_id | GET          | 根据id获取一条bear|\r\n| /api/bears/:bear_id | PUT          | 根据id更新一条bear|\r\n| /api/bears/:bear_id | DELETE       | 根据id删除一条bear|\r\n\r\n以上包括了一个API的一套基本路由，通过HTTP的动词与数据库的增删改查操作相对应。\r\n### 6.路由中间件\r\n上面已经定义过了一个路由，并且也测试成功了。Express Router在定义路由时提供给我们很大的灵活性。\r\n\r\n如果我想在web应用每次收到request的时候都在控制台打印一些东西，会像如下加入 代码\r\n\r\n```\r\n// server.js\r\n\r\n...\r\n\r\n// API  的路由定义\r\n// =============================================================================\r\nvar router = express.Router();              // 获取express Router的实例\r\n\r\n// 任何路由的每次request都执行\r\nrouter.use(function(req, res, next) {\r\n    // 打印\r\n    console.log('Something is happening.');\r\n    next(); // 在这里会将request交给下一个中间件，如果这个中间件后面没有其他中间件，请求会交给匹配的路由作处理\r\n});\r\n\r\n// 用这个路由来做简单的测试(用get动词访问 http://localhost:8080/api)\r\nrouter.get('/', function(req, res) {\r\n    res.json({ message: 'hooray! welcome to our api!' });   \r\n});\r\n\r\n// 这里可以配置更多的路由\r\n\r\n// 注册我们的路由 -------------------------------\r\n// 所有的路由都会加上前缀 /api\r\napp.use('/api', router);\r\n\r\n...\r\n```\r\n在注册中间件的时候用 **router.use(function())**种形式，注册中间件的顺序很重要，web应用收到request时会按照注册先后的顺序处理request。\r\n在这里将使用json的形式返回response。通过json的形式暴露API，可以方便浏览器和手机app使用。\r\n这里还有一个注意点，就是需要调用**next()**这样可以保证request处理不会中途停掉（在做权限的时候，如果reqeust权限不够也可以提前返回响应，此时不需调用next()）。\r\n\r\n使用中间件会使应用变得非常强大，Express里的中间件是从Node接收到request到匹配的路由正式处理reqeust这中间的处理过程，相当于过滤器，可以将多个中间件连接一个过滤器链，如果顺利（没有做提前返回处理），request从第一个中间件开始处理，到最后一个中间件，最后一个中间件处理过后，会做匹配路由处理，匹配上的路由会正式处理请求。中间件可以做很多功能，比如权限过滤，日志打印，数据分析等，在中间件中做权限验证时，如果request权限不够可以提前结束请求处理，如把权限不够的等信息作为响应返回等。如果权限够调用next()继续交给下一个中间件处理。\r\n\r\n#### 测试中间件\r\n\r\n现在用postman测试任意一个已经配置的路由的时候，**Something is happenning**会被打印到控制台。\r\n\r\n![Alt](https://starduliang.github.io/blog/2016.11/node_rest_api/node-api-route-middleware-express.png)\r\n\r\n### 7.配置基本路由\r\n现在加处理**获得所有bears**和**创建一条bear**的路由，两个路由都会匹配```/api/bears```,但是http动词会不同，我们先来配置创建操作的路由，创建以后就可以用创建的纪录来进行查询操作。\r\n\r\n#### 创建一条bear```POST /API/BEARS```\r\n下面用加一个POST的路由然后用postman测试\r\n\r\n```****\r\n// server.js\r\n\r\n...\r\n\r\n// API  的路由定义\r\n// =============================================================================\r\n\r\n... // <-- 路由中间件 和 第一个路由在这\r\n\r\n// 这里可以配置更多的路由\r\n\r\n// 匹配/bears的路由\r\n// ----------------------------------------------------\r\nrouter.route('/bears')\r\n\r\n    // 创建一条bear (用 POST动词访问uri http://localhost:8080/api/bears)\r\n    .post(function(req, res) {\r\n        \r\n        var bear = new Bear();      // 创建一个Bear model的实例\r\n        bear.name = req.body.name;  // 从request取出name参数的值然后设置bear的name字段\r\n\r\n        // 保存bear，加入错误处理，即把错误作为响应返回\r\n        bear.save(function(err) {\r\n            if (err)\r\n                res.send(err);\r\n\r\n            res.json({ message: 'Bear created!' });\r\n        });\r\n        \r\n    });\r\n\r\n// 注册我们的路由 -------------------------------\r\n// 所有的路由都会加上前缀 /api\r\napp.use('/api', router);\r\n\r\n...\r\n```\r\n用postman创建一条bear\r\n![Alt](https://starduliang.github.io/blog/2016.11/node_rest_api/node-api-postman-post-create-bear.png)\r\n#### 查询所有bear```GET /API/BEARS```\r\n\r\n```****\r\n// server.js\r\n\r\n...\r\n\r\n// API  的路由定义\r\n// =============================================================================\r\n\r\n... // <-- 路由中间件 和 第一个路由在这\r\n\r\n// 这里可以配置更多的路由\r\n\r\n// 匹配/bears的路由\r\n// ----------------------------------------------------\r\nrouter.route('/bears')\r\n\r\n    // 创建一条bear (用 POST动词访问uri http://localhost:8080/api/bears)\r\n    .post(function(req, res) {\r\n        \r\n        ...\r\n        \r\n    });\r\n\r\n\r\n    // 获取所有的 bears (用 GET动词访问uri http://localhost:8080/api/bears)\r\n    .get(function(req, res) {\r\n        Bear.find(function(err, bears) {\r\n            if (err)\r\n                res.send(err);\r\n\r\n            res.json(bears);\r\n        });\r\n    });\r\n\r\n// 注册我们的路由 -------------------------------\r\n// 所有的路由都会加上前缀 /api\r\napp.use('/api', router);\r\n\r\n...\r\n```\r\n这个地方不用多说已经非常明了，就是往```http://localhost:8080/api/bears ```发送get请求来获得所有的bears（以JSON格式）,如下图看到我们刚才创建的bear。\r\n![Alt](https://starduliang.github.io/blog/2016.11/node_rest_api/node-api-postman-get-all.png)\r\n### 8.为单条纪录创建路由\r\n之前已经做完了```/bears```的路由，现在开始配置url为```/bears/:bear_id```的路由(bear_id指一条bear的id),这个uri下会有三种操作的路由：\r\n\r\n\r\n   * 获得一条bear\r\n   * 更新一条bear的信息\r\n   * 删除一条bear\r\n \r\n bear_id是通过之前配置的中间件```body-parser```解析出来的。\r\n \r\n#### 获取单条bear ```GET /API/BEARS/:BEAR_ID ```\r\n 这里会新增加一个router.route()来匹配形式如/bears/:bear_id的url\r\n \r\n \r\n```\r\n// server.js\r\n\r\n...\r\n\r\n// API  的路由定义\r\n// =============================================================================\r\n\r\n...\r\n\r\n// 匹配/bears的路由\r\n// ----------------------------------------------------\r\nrouter.route('/bears')\r\n    ...\r\n\r\n// 匹配 /bears/:bear_id 的路由\r\n// ----------------------------------------------------\r\nrouter.route('/bears/:bear_id')\r\n\r\n    // 根据id获取指定的bear (GET 请求 http://localhost:8080/api/bears/:bear_id)\r\n    .get(function(req, res) {\r\n        Bear.findById(req.params.bear_id, function(err, bear) {\r\n            if (err)\r\n                res.send(err);\r\n            res.json(bear);\r\n        });\r\n    });\r\n\r\n// 注册我们的路由 -------------------------------\r\n// 所有的路由都会加上前缀 /api\r\napp.use('/api', router);\r\n\r\n...\r\n```\r\n访问/api/bears来查询所有bears的时候，我们发现其中的bear有一个长的id，接下来用那个id来查询单条的bear。\r\n![Alt](https://starduliang.github.io/blog/2016.11/node_rest_api/node-api-postman-get-single.png)\r\n如上图可以通过id查询单条的bear，接下来，根据id来更新一下name，把name的Klaus更新到Sir Klaus。\r\n\r\n#### 更新一条bear的信息 ```PUT /API/BEARS/:BEAR_ID```\r\n在上面的路由router.route()上再通过```.put().```串联上一个新的http动词。\r\n\r\n```\r\n// server.js\r\n\r\n...\r\n\r\n// API  的路由定义\r\n// =============================================================================\r\n\r\n...\r\n\r\n// 匹配/bears的路由\r\n// ----------------------------------------------------\r\nrouter.route('/bears')\r\n    ...\r\n\r\n// 匹配 /bears/:bear_id 的路由\r\n// ----------------------------------------------------\r\nrouter.route('/bears/:bear_id')\r\n\r\n     // 根据id获取指定的bear (GET 请求 http://localhost:8080/api/bears/:bear_id)\r\n    .get(function(req, res) {\r\n        ...\r\n    })\r\n\r\n    // 通过id更新指定的bear (put 请求 http://localhost:8080/api/bears/:bear_id)\r\n    .put(function(req, res) {\r\n\r\n        // 通过bear modle查询一条bear\r\n        Bear.findById(req.params.bear_id, function(err, bear) {\r\n\r\n            if (err)\r\n                res.send(err);\r\n\r\n            bear.name = req.body.name;  // update the bears info\r\n\r\n            // 保存bear\r\n            bear.save(function(err) {\r\n                if (err)\r\n                    res.send(err);\r\n\r\n                res.json({ message: 'Bear updated!' });\r\n            });\r\n\r\n        });\r\n    });\r\n\r\n// 注册我们的路由 -------------------------------\r\n// 所有的路由都会加上前缀 /api\r\napp.use('/api', router);\r\n\r\n...\r\n```\r\n 下面通过发送put请求将指定id的bear的纪录查询出来，然后再把name字段更新成通过请求传递过来的name参数的值，最后把整条纪录更新到数据库（通过保存）\r\n![Alt](https://starduliang.github.io/blog/2016.11/node_rest_api/node-api-post-man-update-record.png)\r\n下面再通过之前配置的/api/bears (get)路由来查询所有的纪录，来看看刚才的更新是否成功。\r\n![Alt](https://starduliang.github.io/blog/2016.11/node_rest_api/node-api-postman-all-updated.png)\r\n#### 删除一条bear ```DELETE /API/BEARS/:BEAR_ID```\r\n当想要删除一条bear的时候只需要用delete动词发送到```/api/bears/:bear_id```\r\n下面代码是用来删除一条bear的代码\r\n\r\n\r\n```\r\n// server.js\r\n\r\n...\r\n\r\n// API  的路由定义\r\n// =============================================================================\r\n\r\n...\r\n\r\n// 匹配/bears的路由\r\n// ----------------------------------------------------\r\nrouter.route('/bears')\r\n    ...\r\n\r\n// 匹配 /bears/:bear_id 的路由\r\n// ----------------------------------------------------\r\nrouter.route('/bears/:bear_id')\r\n\r\n     // 根据id获取指定的bear (GET 请求 http://localhost:8080/api/bears/:bear_id)\r\n    .get(function(req, res) {\r\n        ...\r\n    })\r\n\r\n    // 通过id更新指定的bear (put 请求 http://localhost:8080/api/bears/:bear_id)\r\n    .put(function(req, res) {\r\n       ...\r\n    })\r\n    \r\n    // 通过id删除一条bear (DELETE 访问 http://localhost:8080/api/bears/:bear_id)应用\r\n    .delete(function(req, res) {\r\n        Bear.remove({\r\n            _id: req.params.bear_id\r\n        }, function(err, bear) {\r\n            if (err)\r\n                res.send(err);\r\n\r\n            res.json({ message: 'Successfully deleted' });\r\n        });\r\n    });    \r\n\r\n// 注册我们的路由 -------------------------------\r\n// 所有的路由都会加上前缀 /api\r\napp.use('/api', router);\r\n\r\n...\r\n```\r\n用postman，指定delete动词和要删除的bear的id来删除一条bear\r\n![Alt](https://starduliang.github.io/blog/2016.11/node_rest_api/node-api-postman-delete.png)\r\n这个时候查询所有的纪录的时候已经没有任何纪录了\r\n![Alt](https://starduliang.github.io/blog/2016.11/node_rest_api/node-api-postman-get-all-nothing.png)\r\n\r\n### 9.总结\r\n如上已经可以通过我们的API对资源进行CRUD（create, retrieve, update, delete）操作了，通过以上的规则，我们在定义路由的时候就更清晰明了，很有规则，这个规则用在大型应用时效果就非常明显了，程序员们不用再为url到底怎么叫而苦恼了。\r\n\r\n以上只是做了一套简单的API，如果要让应用更健全，还有很多处理，比如加权限，加错误处理（出错时返回更清晰的错误信息）等。\r\n\r\n**欢迎小伙伴儿指出错误，提出意见**","title":"用Node和Express打造restful API","last_reply_at":"2016-11-17T00:41:41.636Z","good":false,"top":false,"reply_count":7,"visit_count":400,"create_at":"2016-11-14 15:09","author":{"loginname":"starduliang","avatar_url":"https://avatars.githubusercontent.com/u/12774144?v=3&s=120"}},{"id":"582c78ff67db500b79c0ff98","author_id":"57deb3cb7d8293463a01e6d1","tab":"share","content":"在Node中文文档中看到\r\n**\"当 EventEmitter 实例遇到错误，通常的处理方法是产生一个 'error' 事件，node 对错误事件做特殊处理。 如果程序没有监听错误事件，程序会按照默认行为在打印出 栈追踪信息 (stack trace) 后退出。\"**\r\n\r\n 刚开始的理解是：EventEmitter实例如果在运行中出现错误，Node会检测该实例中是否给'error'事件添加了监听器，如果添加了监听器，会触发监听器；如果没有添加监听器，就会打印出异常，中断线程。于是写了下面代码进行验证。\r\n var e = new EventEmitter();\r\n e.on('data',function(){\r\n     console.log(data);\t\t\t//data并未被定义，输出data会报错。\r\n });\r\n e.on('error',function(err){\r\n     console.log(\"has err\");\r\n });\r\n e.emit('data');\r\n 经验证，在输出data时会产生error，但并未触发e的error事件。\r\n 由于英文太菜，不愿查看english DOC，遂在网上查找中文答案，没找到。最后只能查看英文文档。\r\n 英文文档中原句：\r\n* To guard against crashing the Node.js process, a listener can be registered on the process object's uncaughtException event or the domain module can be used. (Note, however, that the domain module has been deprecated)*\r\n原来检测是process上的error事件的监听器。EventEmitter实例在运行时发生错误，Node就会检查process上的error是否添加了监听器，如果添加了监听器，则执行该监听器；如果process的error事件没有添加监听器，Node会打印出异常，并且终止线程。\r\nps：对于error事件特殊处理还包含domian，由于不懂domian是干什么的，这里就不写了，等学完domian之后，再将补齐。\r\n\r\n总结：Node的官方英文文档很重要，要学会阅读英文文档。","title":"EventEmitter类中对error做的特殊处理","last_reply_at":"2016-11-16T15:19:27.786Z","good":false,"top":false,"reply_count":0,"visit_count":86,"create_at":"2016-11-16 23:19","author":{"loginname":"muyoucun557","avatar_url":"https://avatars.githubusercontent.com/u/22274829?v=3&s=120"}},{"id":"582c37c4e885ce5a39382940","author_id":"580eb9411a9a7d99095310ba","tab":"ask","content":"我自己写的express 本地可以运行，无论是 什么端口都可以运行，但是我放到腾讯云上就gg，好尴尬，然后我就想这到底是为什么？我就用官方自己生成的去运行，果然 本地可以 云服务器也是可以运行，新手伤不起我就奇怪了如果我代码是错误的 为什么 本地是可以使用呢？？？？ [github上文件地址](https://github.com/ThomasHuke/error)","title":"新手写express的遇见奇葩问题","last_reply_at":"2016-11-16T15:09:10.162Z","good":false,"top":false,"reply_count":6,"visit_count":144,"create_at":"2016-11-16 18:41","author":{"loginname":"ThomasHuke","avatar_url":"https://avatars.githubusercontent.com/u/18352236?v=3&s=120"}},{"id":"582bd868c1d3b2b57db5e30e","author_id":"50b5bc5d637ffa4155091236","tab":"ask","content":"另一台主机的服务器是已经有的原来旧的项目，协议是自定义的格式","title":"express中没有有办法 接受另一台主机上的tcp服务器的推送数据","last_reply_at":"2016-11-16T14:50:46.042Z","good":false,"top":false,"reply_count":2,"visit_count":118,"create_at":"2016-11-16 11:54","author":{"loginname":"yakczh","avatar_url":"https://avatars.githubusercontent.com/u/6591466?v=3&s=120"}},{"id":"582bfcf96c4502be6ed87c45","author_id":"582ad9ca6c4502be6ed87c19","tab":"ask","content":"configure没问题，但是build就出错了，这个binding.cc文件我怎么找不到啊。\r\n\r\n\r\n![IQ)8B08LP$[JN4_(S`X~MED.jpg](//dn-cnode.qbox.me/FgU49t_LeAcim6TvO62c1ar9gQFA)\r\n\r\n我使用的是vs2013； npm config set msvs_version 2013 --global 还是不行\r\n大神们求解","title":"node-gyp build时这个binding.cc到底是个什么？","last_reply_at":"2016-11-16T13:19:24.445Z","good":false,"top":false,"reply_count":5,"visit_count":139,"create_at":"2016-11-16 14:30","author":{"loginname":"qianhao5316357","avatar_url":"https://avatars.githubusercontent.com/u/23473796?v=3&s=120"}},{"id":"582a6becc1d3b2b57db5e29c","author_id":"580c1addc3fead57507172a9","tab":"ask","content":"有的github仓库文件特别多，只想clone一部分文件，该如何做到呢？","title":"clone github仓库时，如何只克隆仓库的一部分？","last_reply_at":"2016-11-16T13:05:08.594Z","good":false,"top":false,"reply_count":7,"visit_count":195,"create_at":"2016-11-15 09:59","author":{"loginname":"jowang2016","avatar_url":"https://avatars.githubusercontent.com/u/18169317?v=3&s=120"}},{"id":"582c37dfe885ce5a39382941","author_id":"544f2108888fcbd6172d389b","tab":"share","content":"## webpack-dev-server 使用总结\r\n\r\n在前端工程化的年代，相信webpack和webpack-dev-server现如今大部分人都在使用吧，现列举一些常用的webpack-dev-server的属性，方便提高开发效率\r\n\r\n* contentBase  服务启动后伺候的静态文件，通俗点就是index.html在哪找，它并不会影响output中的路径配置\r\n* hot 热替选项\r\n* quiet 控制台是否输出信息\r\n* noInfo  过滤很多无关内容\r\n* stats 一个对象，本人只在里面用过colors这个属性，控制台信息是否为彩色\r\n* historyApiFallback 支持像react-router或vue-router的模式为browserHistory时，路由的跳转问题\r\n* publicPath 重要，静态资源伺候地址，就是获取js/css/image等静态资源的路径地址\r\n* proxy 挺好用的，下面会重点讲，方便调试，在没有上node服务前后端分离的情况下，也告别了本地启后台服务的困境（吐槽：以前每天早上来更新代码后，跑一遍后台服务和更新数据库，基本一个上午就过去了，然后可以吃午饭了，哈哈哈，PS.其实这样还是挺爽的）\r\n\r\n本人暂且只用过这几个属性，望大家指正和补充\r\n其他属性与配置请参照[官方文档](http://webpack.github.io/docs/webpack-dev-server.html)\r\n\r\n这里主要讲下proxy\r\n\r\nwebpack-dev-server使用的是[http-proxy-middleware](https://github.com/chimurai/http-proxy-middleware)，因此里面所有配置都可以参考http-proxy-middleware的文档\r\n\r\n```\r\nproxy: {\r\n    '/apis': {\r\n        target: '', //要代理到的地址\r\n        secure: false, //若地址为https，需要设置为false\r\n        onProxyReq: function(proxyReq, req, res) { //提前设置一些代理的头部，如token信息等\r\n\r\n        },\r\n        //...其他配置请自行查阅文档http-proxy-middleware文档\r\n    }\r\n}\r\n```\r\n\r\n本人实际项目中线上环境需要登录获取一个token标识，判断用户登录是否过期，之前是每次自行登录一遍线上地址，然后把返回的token拷贝下来，在onProxyReq函数中设置进去，若过期后又要重复操作一遍。\r\n\r\n但既然讲究**前端工程化**，要的就是迅速开发，使开发人员不用受这些繁琐配置的烦劳，不然太影响心情和效率了\r\n\r\n其实webpack-dev-server本身就是一个express，当proxy直接在配置中无法满足某些需求的时候，可以使用[http-proxy-middleware](https://github.com/chimurai/http-proxy-middleware)中间件，下面列出实际项目中的代理的部分代码，还有用到[request](https://github.com/request/request)\r\n\r\n```\r\nvar proxy = require('http-proxy-middleware');\r\nvar request = require('request');\r\nvar server = new WebpackDevServer(webpack(config), option);\r\nvar proxyOptions = {\r\n    target: '', //要代理到的地址\r\n    secure: false,\r\n    onProxyReq: function(proxyReq, req, res) {\r\n        //设置代理的响应头\r\n    }\r\n}\r\n\r\nserver.use('/apis', function (req, res, next) {\r\n    //此处利用request模拟登录拿到返回的token信息，设置到cookie里，下次就可以直接取出来了\r\n\r\n    //...省略一些判断逻辑代码，判断是否需要模拟登录拿token信息\r\n\r\n    next() //交给下一个中间件\r\n})\r\n\r\nserver.use('/apis', proxy('/apis', proxyOptions)); //调用http-proxy-middleware\r\n```\r\n\r\n谢谢，这只是本人项目中遇到的问题和解决的办法，望相互学习，各位大神多多指教","title":"webpack-dev-server 使用总结","last_reply_at":"2016-11-16T10:41:35.892Z","good":false,"top":false,"reply_count":0,"visit_count":108,"create_at":"2016-11-16 18:41","author":{"loginname":"soullcm","avatar_url":"https://avatars.githubusercontent.com/u/5706155?v=3&s=120"}},{"id":"57ea4e976ab98805449b9509","author_id":"57ea46cdea2fa420446d432e","tab":"job","content":"![563221903213148963.jpg](//dn-cnode.qbox.me/FkyfGD8goqu-0eWr9mG9rjvcAxpg)\r\n**我们是一家产品公司（上海闻上信息科技有限公司），坐落于浦东新区张江高科技园区内**\r\n可交付产品包括免费软件项目和自已出品的硬件，定位于家用迷你服务器市场，定位现有mini pc用户和部分家用NAS用户（轻存储，重应用）。\r\n软件产品包括两个主要项目，一个是为家用用户准备的简单易用的Docker应用部署与磁盘卷管理器，\r\n项目名称为Appifi；让家用用户可以简单部署Docker应用，例如ownCloud，transmission，calibre，等等；\r\n产品涵盖服务端，windows/mac客户端，android/ios手持端；并计划加入云端集成允许用户远程访问；项目名称FruitMix；主打易用性和家庭分享。\r\n\r\n![286289929919191792.jpg](//dn-cnode.qbox.me/Fm_U1SRijdhfwRSKsMqcpdqSJ6Fb)\r\n**我们在找什么样的人**\r\n1. 工作热情，有责任心，学习能力强，抗压力强；\r\n2. 把代码可读性放在首要位置，熟悉代码结构化，熟悉JavaScript常用设计模式，包括factory，visitor, strategy等，有很好的代码质量控制能力和重构经验；\r\n3. 熟悉单元测试，了解集成和压力测试；理解常见测试逻辑，黑盒白盒，覆盖，边界，状态机；\r\n4. 熟练使用git工具，熟悉github工作流，能合并Pull Request和本地Merge代码，熟悉代码测试、审查、发布、部署流程；能审查初级工程师代码，给出修改意见；\r\n5. 对常见业务问题，例如任务队列，http和文件流处理，有遇到问题可以提出设计模型的能力；\r\n6. 最好是CS专业，如果不是CS专业，至少对数据结构有很好的理解，可以很容易写出集合排序、树遍历等常用算法；\r\n7. 对函数式编程有了解，习惯书写高阶函数，集合对象Functor，Promise Chain，有加分；\r\n\r\n**我们的技术栈**\r\n1. NodeJS\r\n2. Express\r\n3. RESTful API\r\n4. webpack/babel\r\n5. MongoDB. Mocha, Chai, Sinon\r\n6. Bluebird Promise, ES7 Async/Await\r\n7. 对docker api和redux有了解加分\r\n\r\n**具体工作内容**\r\n1. 我们的产品是一个家用服务器和存储系统，致力于为用户提供各种终端设备的文件备份、存储、访问、分享，并集成一些面向家庭用户的Linux文件服务和Web应用\r\n2. 系统开发的特点是，使用了NodeJS技术，Express框架，但是开发更象系统级编程而不是常见的云应用编程，系统没有高并发和长时间的高压力，也没有分布式计算要求；以文件i/o和数据对象操作为主，辅助以少量的数据库访问；\r\n3. 系统集成了Docker应用管理，通过Docker Daemon提供的REST API实现\r\n4. 系统会控制或访问一些Linux服务、配置文件、Systemd、udev、iptable，等等，要求开发者熟悉Linux；\r\n\r\n**其他**\r\n1. 有充裕的代码测试工程师配合\r\n2. 有嵌入式系统开发经验者加分\r\n薪资20k-30k\r\n\r\n\r\n我们需要年轻、有想法、有创造力、有无尽的学习欲望、愿意在新时代融入全球范围的开发社区的年轻人。\r\n**前端实习岗位及React/Fullstack JS程序员岗位长期开放。**\r\n\r\n**最后供上我的联系方式~**\r\n邮箱：yanhong.zhou@winsuntech.cn ，周小姐\r\n微信戳下方：\r\n\r\n\r\n![filehelper_1474972887175_88.png](//dn-cnode.qbox.me/FhiP_5dTPSIwznoCL26lGyL5nvbW)","title":"【上海】闻上科技招募node.js工程师1名","last_reply_at":"2016-11-16T10:36:32.671Z","good":false,"top":false,"reply_count":3,"visit_count":330,"create_at":"2016-09-27 18:48","author":{"loginname":"angelalzl","avatar_url":"https://avatars.githubusercontent.com/u/22291351?v=3&s=120"}},{"id":"5825c2041120be9438b02af8","author_id":"54b0f146ce87bace2444ceca","tab":"ask","content":"有一个需求就是不停从redis里面取数据。我想的就是使用async.dowhilst做循环操作。但是这个操作并不能很好的体现node的异步特性。。async.dowhilst相当于把异步变同步。不知道大神们是怎么用循环来处理异步的。\n\n来自酷炫的 [CNodeMD](https://github.com/TakWolf/CNode-Material-Design)","title":"node循环处理异步操作除了通过流程控制以及递归之外还有没有其他的方式。","last_reply_at":"2016-11-16T10:28:08.220Z","good":false,"top":false,"reply_count":10,"visit_count":330,"create_at":"2016-11-11 21:05","author":{"loginname":"weierbufan","avatar_url":"https://avatars.githubusercontent.com/u/6757408?v=3&s=120"}},{"id":"582c12236c4502be6ed87c4c","author_id":"57ec70eed3c70faa43663f2c","tab":"ask","content":"照着https://github.com/cnodejs/nodeclub 文档安装，执行到 make install 的时候，特别慢，好像被卡住了\r\n一直显示 [     .............] / fetchMetadata: sill mapToRegistry uri https://registry.npmjs.org/flexbuffer\r\n求解？","title":"安装cnode论坛源码的时候特别慢","last_reply_at":"2016-11-16T10:06:23.058Z","good":false,"top":false,"reply_count":1,"visit_count":137,"create_at":"2016-11-16 16:00","author":{"loginname":"minishine","avatar_url":"https://avatars.githubusercontent.com/u/4065596?v=3&s=120"}},{"id":"582b9ef86c4502be6ed87c2a","author_id":"582b9b4dc1d3b2b57db5e2e1","tab":"ask","content":"这是html:\r\n<form method=\"post\" class=\"create-post\">\r\n        <p>\r\n          <span class=\"form-title\">title</span>\r\n          <input type=\"text\" style=\"width:100%;\" name=\"post.title\" value=\"<%= model.title %>\">\r\n        </p>\r\n        <p>\r\n          <span class=\"form-title\">content</span>\r\n          <textarea name=\"post.content\" style=\"width:100%;height:150px;\"><%= model.content %></textarea>\r\n        </p>\r\n        <p>\r\n          <input type=\"submit\" value=\"Post\">\r\n        </p>\r\n      </form>\r\n\t  \r\n这是部分node代码\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\n**问题：在node查询到有body.post.title, body.post.content，但你直接获取这两个内容是会异常，因为没有post这个对象啊。\r\n**\r\n我参考了之前同学发的帖子\r\nhttps://cnodejs.org/topic/5586292501d3ce0d73d68fec\r\n我已经照他的做法做了，将  extended: true，总是依旧。\r\n所以，这问题到底怎么解决，新手求解答，谢谢。","title":"[RESOLVED]body-parser查询form表单中类型post[title]这样的格式的内容issue","last_reply_at":"2016-11-16T09:55:21.546Z","good":false,"top":false,"reply_count":3,"visit_count":129,"create_at":"2016-11-16 07:49","author":{"loginname":"imbamboo","avatar_url":"https://avatars.githubusercontent.com/u/23488412?v=3&s=120"}}]},"statusCode":200}
