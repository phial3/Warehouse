{"errMsg":"request:ok","data":{"success":true,"data":{"id":"56302801fa186b6f4496b53b","author_id":"547c35030ae47dec03aa2939","tab":"share","content":"<div class=\"markdown-text\"><h2>简介</h2>\n<p><strong>Node.js</strong> 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p>\n<p><strong>Node.js 4.0.0</strong>这个版本是Node和iojs合并后发布的首个稳定版本，并且为开发者带来了大量的ES6语言扩展。了解 Node.js中包括的ES6语言扩展。本课将会为你介绍如何使用这些新特性。</p>\n<p><strong>Node.js 4.0.0</strong> 可以让您享受最尖端的技术，保持项目的先进性。其中对 v8 的升级几乎做到了与 Chromium / Google Chrome 同步，达到了 4.5.x，它提供了很多新的语言功能。ECMA-262 是 JavaScript 语言规范的最新版本，而且好多新特性数都是开箱即用的。这些新特性包括：</p>\n<ul>\n<li>classes - 各种 ‘类’，再也无需用 CoffeeScript 的语法糖写类了</li>\n<li>generators - 未来的.js 代码中将有无数生成器，不学一点就看不懂 JS 代码了哦</li>\n<li>collections － 集合、映射、弱集合、弱映射</li>\n<li>arrow functions － 箭向函数</li>\n<li>block scoping － 使用 let 、const 作用域，块辖域</li>\n<li>template strings － 模板字串</li>\n<li>promises － 用标准化了的方法进行延迟和异步计算</li>\n<li>symbols － 唯一的、不可修改的数据</li>\n</ul>\n<h2>严格模式</h2>\n<p>严格模式在语义上与正常的JavaScript有一些不同。 首先，严格模式会将JavaScript陷阱直接变成明显的错误。其次，严格模式修正了一些引擎难以优化的错误：同样的代码有些时候严格模式会比非严格模式下更快。 第三，严格模式禁用了一些有可能在未来版本中定义的语法。</p>\n<p>因为我们ECMAScript 6中的一些特性，必须在严格模式下，才可以使用，而不报错。</p>\n<p>严格模式可以应用到整个script标签或某个别函数中。</p>\n<p>为整个script标签开启严格模式, 需要在所有语句之前放一个特定语句 “use strict”; （或 ‘use strict’;）</p>\n<pre class=\"prettyprint\"><code>&#x2F;&#x2F; 整个语句都开启严格模式的语法\n  &quot;use strict&quot;;\n   let v = &quot;Hi!  I&#x27;m a strict mode script!&quot;;\n</code></pre><p>同样的，要给某个函数开启严格模式，得把 “use strict”; (或 ‘use strict’; )声明一字不漏地放在函数体所有语句之前。</p>\n<pre class=\"prettyprint\"><code>function strict()\n{\n  &#x2F;&#x2F; 函数级别严格模式语法\n  &#x27;use strict&#x27;;\n  return &quot;Hi!  I&#x27;m a strict mode function!&quot; ;\n}\nfunction notStrict() { \n  return &quot;I&#x27;m not strict.&quot;;\n}\n</code></pre><h2>let</h2>\n<p>let 允许把变量的作用域限制在块级域中。与 var 不同处是：var 申明变量要么是全局的，要么是函数级的，而无法是块级的。</p>\n<p><strong>let vs var</strong></p>\n<p>let的作用域是块，而var的作用域是函数</p>\n<pre class=\"prettyprint\"><code>&#x27;use strict&#x27;;\nvar a = 5;\nvar b = 10;\nif (a === 5) {\n  let a = 4; &#x2F;&#x2F; The scope is inside the if-block\n  var b = 1; &#x2F;&#x2F; The scope is inside the function\n  console.log(a);  &#x2F;&#x2F; 4\n  console.log(b);  &#x2F;&#x2F; 1\n} \nconsole.log(a); &#x2F;&#x2F; 5\nconsole.log(b); &#x2F;&#x2F; 1\n</code></pre><p><strong>let在循环中</strong></p>\n<p>可以使用let关键字绑定变量在循环的范围而不是使用一个全局变量(使用var)定义。</p>\n<pre class=\"prettyprint\"><code>&#x27;use strict&#x27;;\nfor (let i = 0; i &lt; 10; i++) {\n  console.log(i); &#x2F;&#x2F; 0, 1, 2, 3, 4 ... 9\n}\nconsole.log(i); &#x2F;&#x2F; i is not defined\n</code></pre><p>上面报错，因为变量i不存在于for语句外的作用域中。let创建块级作用域变量的，使用var创建一个全局变量。</p>\n<h2>const</h2>\n<p>const这个声明创建一个常量,可以全局或局部的函数声明。</p>\n<p>一个常量可以是全局的或者是局部的,常量遵循与变量相同的作用域规则。</p>\n<p>一个常量不可以被重新赋值,并且不能被重复声明.所以,虽然可以在声明一个常量的时候不进行初始化,但这样做是没有意义的,因为这个常量的值永远会保持undefined。</p>\n<p>一个常量不能和它所在作用域内的其他变量或函数拥有相同的名称。</p>\n<p><strong>示例</strong>\n下面的例子演示了常量的行为。</p>\n<pre class=\"prettyprint\"><code>const num = 10;\nnum =20;\nconsole.log(num); &#x2F;&#x2F; 10\n</code></pre><p>如果我们在上面声明常量num，在声明var num，这时会报错，num已经声明。</p>\n<pre class=\"prettyprint\"><code>const num = 10;\nvar num = 20;\nconsole.log(num); &#x2F;&#x2F; &#x27;num&#x27; has already been declared\n</code></pre><h2>块级作用域</h2>\n<p>很多语言中都有块级作用域，JavaScript使用var声明变量，以function来划分作用域，大括号“{}” 却限定不了var的作用域。用var声明的变量具有变量提升（declaration hoisting）的效果。</p>\n<p>ES6里增加了一个let，可以在{}， if， for里声明。用法同var，但作用域限定在块级，let声明的变量不存在变量提升。</p>\n<pre class=\"prettyprint\"><code>&#x27;use strict&#x27;;\nfunction f1() {\n  var a = 1;\n  let n = 2;\n  if (true) {\n      var a = 20;\n      let n = 10;\n  }\n  console.log(n); &#x2F;&#x2F; 2\n  console.log(a); &#x2F;&#x2F; 20\n}\nf1();\n</code></pre><h2>类声明和类表达式</h2>\n<p>ES6 中的类实际上就是个函数，而且正如函数的定义方式有函数声明和函数表达式两种一样，类的定义方式也有两种，分别是：类声明、类表达式。</p>\n<p><strong>类声明</strong>\n　　类声明是定义类的一种方式，就像下面这样，使用 class 关键字后跟一个类名（这里是 Ploygon），就可以定义一个类。</p>\n<pre class=\"prettyprint\"><code>&#x27;use strict&#x27;;\nclass Polygon {\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n  }\n}\n</code></pre><p><strong>变量提升</strong>\n　　类声明和函数声明不同的一点是，函数声明存在变量提升现象，而类声明不会。也就是说，你必须先声明类，然后才能使用它，否则代码会抛出 ——ReferenceError 异常，像下面这样：</p>\n<pre class=\"prettyprint\"><code>var p = new Polygon(); &#x2F;&#x2F; ReferenceError\n \nclass Polygon {}\n</code></pre><p><strong>类表达式</strong></p>\n<p>类表达式是定义类的另外一种方式，就像函数表达式一样，在类表达式中，类名是可有可无的。如果定义了类名，则该类名只有在类体内部才能访问到。</p>\n<pre class=\"prettyprint\"><code>&#x27;use strict&#x27;;\n&#x2F;&#x2F; 匿名类表达式\nvar Polygon = class {\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n  }\n};\n&#x2F;&#x2F; 命名类表达式\nvar Polygon = class Polygon {\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n  }\n};\n</code></pre><h2>构造函数</h2>\n<p>类的成员需要定义在一对花括号 {} 里，花括号里的代码和花括号本身组成了类体。类成员包括类构造器和类方法（包括静态方法和实例方法）。</p>\n<p>class 根据 <strong>constructor</strong> 方法来创建和初始化对象。</p>\n<p>constructor方法是类的默认方法，通过new命令生成对象实例时，自动调用该方法。一个类只能有一个constructor方法，如果没有显式定义，一个空的constructor方法会被默认添加。</p>\n<p>constructor() {}\nconstructor方法默认返回实例对象（即this），完全可以指定返回另外一个对象。</p>\n<pre class=\"prettyprint\"><code>&#x27;use strict&#x27;;\nclass Foo {\n  constructor() {\n    return Object.create(null);\n  }\n}\nnew Foo() instanceof Foo\n&#x2F;&#x2F; false\n</code></pre><p>上面代码中，constructor函数返回一个全新的对象，结果导致实例对象不是Foo类的实例。</p>\n<p><strong>constructor</strong> 方法是一个特殊的类方法，它既不是静态方法也不是实例方法，它仅在实例化一个类的时候被调用。一个类只能拥有一个名为 constructor 的方法，否则会抛出 SyntaxError 异常。</p>\n<p><strong>严格模式</strong>\n类和模块的内部，默认就是严格模式，所以不需要使用use strict指定运行模式。只要你的代码写在类或模块之中，就只有严格模式可用。</p>\n<h2>静态方法</h2>\n<p>static关键字定义了一个类的静态方法。静态方法被称为无需实例化类也可当类被实例化。静态方法通常用于为应用程序创建实用函数。</p>\n<p>示例</p>\n<pre class=\"prettyprint\"><code>&#x27;use strict&#x27;;\nclass Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n \n    static distance(a, b) {\n        const dx = a.x - b.x;\n        const dy = a.y - b.y;\n \n        return Math.sqrt(dx*dx + dy*dy);\n    }\n}\n \nconst p1 = new Point(5, 5);\nconst p2 = new Point(10, 10);\n \nconsole.log(Point.distance(p1, p2));\n</code></pre><h2>使用 extends 关键字创建子类</h2>\n<p><strong>extends</strong> 关键字可以用来创建继承于某个类的子类。</p>\n<p>这个例子是根据名为Animal类创建一个名为Dog的类。</p>\n<pre class=\"prettyprint\"><code>&#x27;use strict&#x27;;\nclass Animal { \n  constructor(name) {\n    this.name = name;\n  }\n \n  speak() {\n    console.log(this.name + &#x27; makes a noise.&#x27;);\n  }\n}\n \nclass Dog extends Animal {\n  speak() {\n    console.log(this.name + &#x27; barks.&#x27;);\n  }\n}\nvar dog = new Dog(&#x27;NiNi&#x27;);\ndog.speak();\n</code></pre><p><a href=\"http://www.hubwiz.com/course/561e0c8a1bc20c980538e1e8/\">更多内容、示例和练习大家可以去这里试试===&gt;</a></p>\n</div>","title":"Node.js 4.0的ES6新特性。","last_reply_at":"2016-11-17T03:31:05.790Z","good":true,"top":false,"reply_count":66,"visit_count":10736,"create_at":"2015-10-28 09:42:25","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"replies":[{"id":"56302d3ffa186b6f4496b53c","author":{"loginname":"wanghaa","avatar_url":"https://avatars.githubusercontent.com/u/3425904?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>不错，不错，ES6越来越普及了</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-28T02:04:47.186Z","reply_id":null},{"id":"56303d284609eb8a447a8a51","author":{"loginname":"alsotang","avatar_url":"https://avatars.githubusercontent.com/u/1147375?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>汇智网的课程很不错啊</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-28T03:12:40.352Z","reply_id":null},{"id":"563047b34609eb8a447a8a55","author":{"loginname":"1340641314","avatar_url":"https://avatars.githubusercontent.com/u/8424643?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>收藏了</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-28T03:57:39.709Z","reply_id":null},{"id":"563047c0fa186b6f4496b541","author":{"loginname":"1340641314","avatar_url":"https://avatars.githubusercontent.com/u/8424643?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>你不会是芒果吧</p>\n</div>","ups":["543d4f522c834593092fba06","56f608d3a54df2e06e6435cb"],"create_at":"2015-10-28T03:57:52.860Z","reply_id":null},{"id":"56307acbfa186b6f4496b553","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/alsotang\">@alsotang</a>  多谢老大支持！！！</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-28T07:35:39.454Z","reply_id":null},{"id":"56307aeb4609eb8a447a8a5d","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/1340641314\">@1340641314</a>  小贝你好。</p>\n</div>","ups":["55a668125a4b4a86539c2fd4","543d4f522c834593092fba06"],"create_at":"2015-10-28T07:36:11.721Z","reply_id":null},{"id":"563084e7ff488da544934418","author":{"loginname":"yuyang041060120","avatar_url":"https://avatars.githubusercontent.com/u/6648248?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>如果能列举下新特性的在实际项目中的具体用途，那就更棒了。如WeakSet、WeakMap、Symbol\n个人感觉脱离实际项目的例子顶多让我们知道怎么用，但是不代表会用啊。</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-28T08:18:47.899Z","reply_id":null},{"id":"563085feff488da54493441a","author":{"loginname":"Hanggi","avatar_url":"https://avatars.githubusercontent.com/u/5997900?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>新的字符串表达式挺不错的，不用不停开关引号、加上加号。但又据说比较危险，纠结用不用。</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-28T08:23:26.093Z","reply_id":null},{"id":"5630976eff488da54493441f","author":{"loginname":"yuu2lee4","avatar_url":"https://avatars.githubusercontent.com/u/8046366?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>marker</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-28T09:37:50.258Z","reply_id":null},{"id":"5630c2c1315cbc902c446866","author":{"loginname":"1340641314","avatar_url":"https://avatars.githubusercontent.com/u/8424643?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/2596887568\">@2596887568</a> 再给你顶上去</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-28T12:42:41.104Z","reply_id":"56307aeb4609eb8a447a8a5d"},{"id":"5630c2ec315cbc902c446868","author":{"loginname":"1340641314","avatar_url":"https://avatars.githubusercontent.com/u/8424643?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/2596887568\">@2596887568</a> 最近上班比较忙，等有时间了，我就玩玩es6</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-28T12:43:24.088Z","reply_id":"56307acbfa186b6f4496b553"},{"id":"563104d4e4d929c3435eca42","author":{"loginname":"captainblue2013","avatar_url":"https://avatars.githubusercontent.com/u/3942299?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>class很不错，以后js的面向对象更可控了，\n比较遗憾的是目前版本不支持解构，解构简直是一大杀器，莫非是模式匹配不好做？</p>\n</div>","ups":["553330ee9138f09b6296747e","543d4f522c834593092fba06"],"create_at":"2015-10-28T17:24:36.343Z","reply_id":null},{"id":"563172d62aaabb9243222f99","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/captainblue2013\">@captainblue2013</a> 5.0不是马上就出来了吗，会越来越强的。\n<a href=\"/user/1340641314\">@1340641314</a>   多谢小贝</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-29T01:13:58.218Z","reply_id":null},{"id":"56317afedf96eaf443102d68","author":{"loginname":"WilliamDu1981","avatar_url":"https://avatars.githubusercontent.com/u/6104369?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/captainblue2013\">@captainblue2013</a> es6的class好像只是个语法糖，并没有真的实现类</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-29T01:48:46.235Z","reply_id":null},{"id":"56318718df96eaf443102d6e","author":{"loginname":"naruto900814","avatar_url":"https://avatars.githubusercontent.com/u/5361460?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>mark</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-29T02:40:24.146Z","reply_id":null},{"id":"5631b1d42aaabb9243222fb1","author":{"loginname":"Carrotzpc","avatar_url":"https://avatars.githubusercontent.com/u/10265417?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>mark</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-29T05:42:44.516Z","reply_id":null},{"id":"5631e87b8325d4f62a49aac5","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/alsotang\">@alsotang</a> 老大，能否给我发个你的联系方式？</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-29T09:35:55.757Z","reply_id":"56303d284609eb8a447a8a51"},{"id":"5632c9cb8325d4f62a49aaed","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/yuyang041060120\">@yuyang041060120</a> 确实如你所言，看时间吧，时间允许多写写实例。</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-30T01:37:15.244Z","reply_id":null},{"id":"5632cd30268d85fd291adeff","author":{"loginname":"blackjack","avatar_url":"//gravatar.com/avatar/66f5e67f825ebdfcc60d3e22cb4e14b5?size=48"},"content":"<div class=\"markdown-text\"><p>学习了</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-30T01:51:44.725Z","reply_id":null},{"id":"5632dada268d85fd291adf07","author":{"loginname":"yuyang041060120","avatar_url":"https://avatars.githubusercontent.com/u/6648248?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/2596887568\">@2596887568</a>  ：)</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-30T02:50:02.827Z","reply_id":"5632c9cb8325d4f62a49aaed"},{"id":"5632dfa876eafe2e2aa356e0","author":{"loginname":"chemdemo","avatar_url":"https://avatars.githubusercontent.com/u/1014734?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>js正在变得越来越像java啊</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-30T03:10:32.756Z","reply_id":null},{"id":"5633a6a076eafe2e2aa35721","author":{"loginname":"alsotang","avatar_url":"https://avatars.githubusercontent.com/u/1147375?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/2596887568\">@2596887568</a> <a href=\"mailto:alsotang@gmail.com\">alsotang@gmail.com</a></p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-30T17:19:28.102Z","reply_id":"5631e87b8325d4f62a49aac5"},{"id":"56346e4e3ef9ce60493b0c94","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/chemdemo\">@chemdemo</a> 这从何说起？</p>\n</div>","ups":["543d4f522c834593092fba06"],"create_at":"2015-10-31T07:31:26.899Z","reply_id":null},{"id":"5636b6798c67728402553338","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>node.js 5发布了，感觉有点儿跟不上的节奏，太快了。</p>\n</div>","ups":["543d4f522c834593092fba06","55d1be219bdae50c477e6ea4"],"create_at":"2015-11-02T01:03:53.359Z","reply_id":null},{"id":"5639ad83b0cedafd3897036d","author":{"loginname":"zhangjx","avatar_url":"https://avatars.githubusercontent.com/u/1531780?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>mark</p>\n</div>","ups":[],"create_at":"2015-11-04T07:02:27.928Z","reply_id":null},{"id":"5639bb2f7320b237394c5a2c","author":{"loginname":"reverland","avatar_url":"https://avatars.githubusercontent.com/u/1418726?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>很开心啊，眼看着各种特性实现</p>\n</div>","ups":[],"create_at":"2015-11-04T08:00:47.570Z","reply_id":null},{"id":"564a80841986c7df7e92af74","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/reverland\">@reverland</a> 不过现在一定node.js 5了。⊙﹏⊙b汗。</p>\n</div>","ups":[],"create_at":"2015-11-17T01:19:00.408Z","reply_id":null},{"id":"564aa8c06fc3f5ae7e0b7e61","author":{"loginname":"chenfeifan","avatar_url":"https://avatars.githubusercontent.com/u/12539384?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>mark</p>\n</div>","ups":[],"create_at":"2015-11-17T04:10:40.753Z","reply_id":null},{"id":"564abf976fc3f5ae7e0b7e67","author":{"loginname":"leizongmin","avatar_url":"https://avatars.githubusercontent.com/u/841625?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>新项目准备上ES6</p>\n</div>","ups":[],"create_at":"2015-11-17T05:48:07.464Z","reply_id":null},{"id":"564ac8371986c7df7e92af94","author":{"loginname":"zfeig","avatar_url":"https://avatars.githubusercontent.com/u/6268345?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>不错！</p>\n</div>","ups":["547c35030ae47dec03aa2939"],"create_at":"2015-11-17T06:24:55.295Z","reply_id":null},{"id":"564d1d566fc3f5ae7e0b7f13","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/leizongmin\">@leizongmin</a> 欢迎来cnodejs分享经验。</p>\n</div>","ups":[],"create_at":"2015-11-19T00:52:38.152Z","reply_id":"564abf976fc3f5ae7e0b7e67"},{"id":"564d1eebe4766d487f6fe3da","author":{"loginname":"leapon","avatar_url":"https://avatars.githubusercontent.com/u/4295945?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>Node 5.1.0 了</p>\n</div>","ups":[],"create_at":"2015-11-19T00:59:23.977Z","reply_id":null},{"id":"564e6f736fc3f5ae7e0b7f69","author":{"loginname":"xiaoyang2022","avatar_url":"https://avatars.githubusercontent.com/u/11973482?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>收藏，很不错的</p>\n<p>来自酷炫的 <a href=\"https://github.com/TakWolf/CNode-Material-Design\">CNodeMD</a></p>\n</div>","ups":[],"create_at":"2015-11-20T00:55:15.193Z","reply_id":null},{"id":"564e6f846fc3f5ae7e0b7f6b","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/leapon\">@leapon</a> 正在准备中，争取早些写出来一些东西。</p>\n</div>","ups":["50f5a8dadf9e9fcc58635898"],"create_at":"2015-11-20T00:55:32.315Z","reply_id":null},{"id":"564e6f85e4766d487f6fe431","author":{"loginname":"xiaoyang2022","avatar_url":"https://avatars.githubusercontent.com/u/11973482?v=3&s=120"},"content":"<div class=\"markdown-text\"><ul>\n<li></li>\n</ul>\n<ol>\n<li></li>\n</ol>\n<p>来自酷炫的 <a href=\"https://github.com/TakWolf/CNode-Material-Design\">CNodeMD</a></p>\n</div>","ups":[],"create_at":"2015-11-20T00:55:33.464Z","reply_id":null},{"id":"56526686612bb01808ada8ce","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/xiaoyang2022\">@xiaoyang2022</a> 什么情况？</p>\n</div>","ups":[],"create_at":"2015-11-23T01:06:14.996Z","reply_id":null},{"id":"56550e97f811b9734d55063b","author":{"loginname":"xiaoyang2022","avatar_url":"https://avatars.githubusercontent.com/u/11973482?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/2596887568\">@2596887568</a> 手机上操作的，卡住了，谢谢你</p>\n</div>","ups":[],"create_at":"2015-11-25T01:27:51.118Z","reply_id":"56526686612bb01808ada8ce"},{"id":"5655131aad12df5d4e050b4b","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/xiaoyang2022\">@xiaoyang2022</a> 互相学习。O(∩_∩)O~</p>\n</div>","ups":[],"create_at":"2015-11-25T01:47:06.311Z","reply_id":null},{"id":"5667951b4a8dd3713ba43610","author":{"loginname":"songtanjichuan","avatar_url":"https://avatars.githubusercontent.com/u/7565822?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>5.0 赶紧写吧。</p>\n</div>","ups":[],"create_at":"2015-12-09T02:42:35.505Z","reply_id":null},{"id":"566a202724b586c83b63fca9","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/songtanjichuan\">@songtanjichuan</a> ⊙﹏⊙b汗。</p>\n</div>","ups":[],"create_at":"2015-12-11T01:00:23.563Z","reply_id":null},{"id":"56f128a50a5a2cfb3ad1491d","author":{"loginname":"fangker","avatar_url":"https://avatars.githubusercontent.com/u/16358646?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>mark</p>\n</div>","ups":[],"create_at":"2016-03-22T11:12:37.335Z","reply_id":null},{"id":"56f1e9bc0a5a2cfb3ad1493b","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/fangker\">@fangker</a> 这么老的文章都能翻到，社区的深度用户啊。</p>\n</div>","ups":[],"create_at":"2016-03-23T00:56:28.726Z","reply_id":null},{"id":"56f9e2a6c5f5b4a959e915e0","author":{"loginname":"fangker","avatar_url":"https://avatars.githubusercontent.com/u/16358646?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/2596887568\">@2596887568</a> 这号要学这一块…资料太少了</p>\n</div>","ups":[],"create_at":"2016-03-29T02:04:22.576Z","reply_id":"56f1e9bc0a5a2cfb3ad1493b"},{"id":"56f9f80a93a696715955398f","author":{"loginname":"Einsy","avatar_url":"https://avatars.githubusercontent.com/u/2882139?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>mark</p>\n</div>","ups":[],"create_at":"2016-03-29T03:35:38.946Z","reply_id":null},{"id":"56fa09038a612c5559d169bd","author":{"loginname":"yakczh","avatar_url":"https://avatars.githubusercontent.com/u/6591466?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>node -v\nv5.1.1</p>\n</div>","ups":[],"create_at":"2016-03-29T04:48:03.516Z","reply_id":null},{"id":"57049ead8a612c5559d16c62","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/yakczh\">@yakczh</a> 哈哈。</p>\n</div>","ups":[],"create_at":"2016-04-06T05:29:17.457Z","reply_id":"56fa09038a612c5559d169bd"},{"id":"57049eb78a612c5559d16c64","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/Einsy\">@Einsy</a> 多谢支持。</p>\n</div>","ups":[],"create_at":"2016-04-06T05:29:27.369Z","reply_id":"56f9f80a93a696715955398f"},{"id":"57049ed0c5f5b4a959e918dd","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/fangker\">@fangker</a> 希望有帮助。</p>\n</div>","ups":[],"create_at":"2016-04-06T05:29:52.575Z","reply_id":"56f9e2a6c5f5b4a959e915e0"},{"id":"570b8a3a9bd3efeb3cdf6464","author":{"loginname":"fangker","avatar_url":"https://avatars.githubusercontent.com/u/16358646?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/2596887568\">@2596887568</a> 感觉没有使用类的必要性</p>\n</div>","ups":[],"create_at":"2016-04-11T11:27:54.593Z","reply_id":"57049ed0c5f5b4a959e918dd"},{"id":"570b990c9bd3efeb3cdf646b","author":{"loginname":"coolcao","avatar_url":"https://avatars.githubusercontent.com/u/3192434?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/Hanggi\">@Hanggi</a> 这个问题我遇到过，使用es6的模板字符串出问题了，但是使用replace就可以，还没找到原因</p>\n</div>","ups":[],"create_at":"2016-04-11T12:31:08.462Z","reply_id":"563085feff488da54493441a"},{"id":"570c4bf0bc564eaf3c6a4964","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/fangker\">@fangker</a> 如果复用很多，应该还是有吧。</p>\n</div>","ups":[],"create_at":"2016-04-12T01:14:24.647Z","reply_id":"570b8a3a9bd3efeb3cdf6464"},{"id":"570cdcfad3220b7e4e304633","author":{"loginname":"fangker","avatar_url":"https://avatars.githubusercontent.com/u/16358646?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/2596887568\">@2596887568</a> 主要是问了些大蛇，他们还没有使用</p>\n</div>","ups":[],"create_at":"2016-04-12T11:33:14.390Z","reply_id":"570c4bf0bc564eaf3c6a4964"},{"id":"570dac46267a92582c7604ec","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/fangker\">@fangker</a> 嗯，大神们用起来一般都随心所欲。哈哈。</p>\n</div>","ups":[],"create_at":"2016-04-13T02:17:42.013Z","reply_id":"570cdcfad3220b7e4e304633"},{"id":"570e48c0742722d76b8228c7","author":{"loginname":"fangker","avatar_url":"https://avatars.githubusercontent.com/u/16358646?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/2596887568\">@2596887568</a>  有空来q群193572405 撸node串</p>\n</div>","ups":[],"create_at":"2016-04-13T13:25:20.556Z","reply_id":"570dac46267a92582c7604ec"},{"id":"570e4b88742722d76b8228c9","author":{"loginname":"JasonBoy","avatar_url":"https://avatars.githubusercontent.com/u/2911620?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>mark</p>\n</div>","ups":[],"create_at":"2016-04-13T13:37:12.711Z","reply_id":null},{"id":"570eee93742722d76b8228dd","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/fangker\">@fangker</a> 已申请加入。</p>\n</div>","ups":[],"create_at":"2016-04-14T01:12:51.767Z","reply_id":"570e48c0742722d76b8228c7"},{"id":"570eee9c938530066c50f7ef","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/JasonBoy\">@JasonBoy</a> 感谢支持！</p>\n</div>","ups":[],"create_at":"2016-04-14T01:13:00.729Z","reply_id":"570e4b88742722d76b8228c9"},{"id":"570f5ba2aaacd2cb71af5361","author":{"loginname":"leehomeok","avatar_url":"https://avatars.githubusercontent.com/u/13464485?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>mark</p>\n</div>","ups":[],"create_at":"2016-04-14T08:58:10.223Z","reply_id":null},{"id":"5714890f16e60bcd0d0bffbc","author":{"loginname":"guokaijava","avatar_url":"https://avatars.githubusercontent.com/u/10337689?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>df\nFrom <a href=\"https://github.com/soliury/noder-react-native\">Noder</a></p>\n</div>","ups":[],"create_at":"2016-04-18T07:13:19.074Z","reply_id":null},{"id":"57148dda759d0f910dc0ca2f","author":{"loginname":"oyosc","avatar_url":"https://avatars.githubusercontent.com/u/13896491?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>mark</p>\n</div>","ups":[],"create_at":"2016-04-18T07:33:46.931Z","reply_id":null},{"id":"571583d6759d0f910dc0ca5b","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/oyosc\">@oyosc</a>\n<a href=\"/user/guokaijava\">@guokaijava</a>\n谢谢！</p>\n</div>","ups":[],"create_at":"2016-04-19T01:03:18.407Z","reply_id":null},{"id":"57158cb816e60bcd0d0bffea","author":{"loginname":"youarenode","avatar_url":"//gravatar.com/avatar/44a670c5229fa93a91be710fa3bd1fa9?size=48"},"content":"<div class=\"markdown-text\"><p>不错，再介绍下5.0</p>\n</div>","ups":[],"create_at":"2016-04-19T01:41:12.815Z","reply_id":null},{"id":"57352bd4c3e4ef7657ab12a5","author":{"loginname":"2596887568","avatar_url":"https://avatars.githubusercontent.com/u/9349200?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/youarenode\">@youarenode</a> 等有空的。</p>\n</div>","ups":[],"create_at":"2016-05-13T01:20:20.452Z","reply_id":null},{"id":"582ae3806c4502be6ed87c1c","author":{"loginname":"Copypeng","avatar_url":"https://avatars.githubusercontent.com/u/3678212?v=3&s=120"},"content":"<div class=\"markdown-text\"><p>nice.</p>\n</div>","ups":[],"create_at":"2016-11-15T10:29:20.684Z","reply_id":null},{"id":"582c09406c4502be6ed87c48","author":{"loginname":"huangyanxiong01","avatar_url":"https://avatars.githubusercontent.com/u/5459483?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"http://node.green/\">http://node.green/</a></p>\n</div>","ups":[],"create_at":"2016-11-16T07:22:40.383Z","reply_id":null},{"id":"582d24796efc292b79ff09f2","author":{"loginname":"yisibl","avatar_url":"https://avatars.githubusercontent.com/u/2784308?v=3&s=120"},"content":"<div class=\"markdown-text\"><p><a href=\"/user/huangyanxiong01\">@huangyanxiong01</a>\nFrom <a href=\"https://github.com/soliury/noder-react-native\">Noder</a></p>\n</div>","ups":[],"create_at":"2016-11-17T03:31:05.777Z","reply_id":"582c09406c4502be6ed87c48"}],"is_collect":false}},"statusCode":200}
