{
	// 注册程序
	"wx.App": {
		"prefix": "wxApp",
		"body": [
			"App({",
			"\tonLaunch: function() {",
			"\t\t$1",
			"\t},",
			"\tonShow: function() {",
			"\t\t$2",
			"\t},",
			"\tonHide: function() {",
			"\t\t$3",
			"\t},",
			"\tglobalData: ${4:globalData}",
			"})$5"
		],
		"description": "注册程序"
	},
	// 注册页面
	"wx.page": {
		"prefix": "wxPage",
		"body": [
			"Page({",
			"\tdata: {",
			"\t\t$1",
			"\t},",
			"\tonLoad: function(options) {",
			"\t\t//Do some initialize when page load.",
			"\t\t$2",
			"\t},",
			"\tonReady: function() {",
			"\t\t//Do some when page ready.",
			"\t\t$3",
			"\t},",
			"\tonShow: function() {",
			"\t\t//Do some when page show.",
			"\t\t$4",
			"\t},",
			"\tonHide: function() {",
			"\t\t//Do some when page hide.",
			"\t\t$5",
			"\t},",
			"\tonUnload: function() {",
			"\t\t//Do some when page unload.",
			"\t\t$6",
			"\t},",
			"\tonPullDownRefresh: function() {",
			"\t\t//Do some when page pull down.",
			"\t\t$7",
			"\t}",
			"})$8"
		],
		"description": "注册页面"
	},
	// 网络请求
	"wx.request": {
		"prefix": "wxRequest",
		"body": [
			"wx.request({",
			"\turl: '$1',",
			"\theader: {",
			"\t\t'Content-Type': 'application/json'",
			"\t},",
			"\tsuccess: function(res) {",
			"\t\t$2",
			"\t}",
			"})$3"
		],
		"description": "url 开发者服务器接口地址\n\ndata 请求的参数\n\nheader 设置请求的 header , header 中不能设置 Referer\n\nmethod 默认为 GET，有效值：OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT\n\nsuccess 收到开发者服务成功返回的回调函数，res = {data: '开发者服务器返回的内容'}\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 获取位置
	"wx.getLocation": {
		"prefix": "wxGetLocation",
		"body": [
			"wx.getLocation({",
			"\ttype: '${1:wgs84}',",
			"\tsuccess: function(res) {",
			"\t\tvar latitude = res.latitude",
			"\t\tvar longitude = res.longitude",
			"\t},",
			"})$2"
		],
		"description": "type 默认为 wgs84 返回 gps 坐标，gcj02 返回可用于wx.openLocation的坐标\n\nsuccess 接口调用成功的回调函数，返回内容详见返回参数说明。\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）\n\n+++++success 返回参数说明：+++++\n\nlatitude	纬度，浮点数，范围为-90~90，负数表示南纬\n\nlongitude	经度，浮点数，范围为-180~180，负数表示西经\n\nspeed	速度，浮点数，单位m/s\n\naccuracy	位置的精确度"
	},
	// 选择位置
	"wx.chooseLocation": {
		"prefix": "wxChooseLocation",
		"body": [
			"wx.chooseLocation({",
			"\t$1",
			"})"
		],
		"description": "success 接口调用成功的回调函数，返回内容详见返回参数说明。\n\ncancel 用户取消时调用\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）\n\n+++++success 返回参数说明：+++++\n\nname 位置名称\n\naddress	详细地址\n\nlatitude	纬度，浮点数，范围为-90~90，负数表示南纬\n\nlongitude	经度，浮点数，范围为-180~180，负数表示西经"
	},
	// 打开位置
	"wx.openLocation": {
		"prefix": "wxOpenLocation",
		"body": [
			"wx.getLocation({",
			"\ttype: '${1:gcj02}',",
			"\tsuccess: function(res) {",
			"\t\tvar latitude = res.latitude",
			"\t\tvar longitude = res.longitude",
			"\t\twx.openLocation({",
			"\t\t\tlatitude: latitude,",
			"\t\t\tlongitude: longitude",
			"\t\t})",
			"\t},",
			"})$2"
		],
		"description": "latitude 纬度，范围为-90~90，负数表示南纬\n\nlongitude 经度，范围为-180~180，负数表示西经\n\nscale 缩放比例，范围1~28，默认为28\n\nname 位置名\n\naddress 地址的详细说明\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 用户登录
	"wx.login": {
		"prefix": "wxLogin",
		"body": [
			"wx.login({",
			"\tsuccess: function(res) {",
			"\t\tif(res.code) {",
			"\t\t\t$1",
			"\t\t} else {",
			"\t\t\tconsole.log(res.errMsg)",
			"\t\t}",
			"\t}",
			"})$2"
		],
		"description": "success 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）\n\n+++++success 返回参数说明：+++++\n\nerrMsg 调用结果\n\ncode 用户允许登录后，回调内容会带上 code（有效期五分钟），开发者需要将 code 发送到开发者服务器后台，使用code 换取 session_key api，将 code 换成 openid 和 session_key"
	},
	// 检查登录状态是否过期
	"wx.checkSession": {
		"prefix": "wxCheckSession",
		"body": [
			"wx.checkSession({",
			"\tsuccess: function(){",
			"\t\t$1",
			"\t},",
			"\tfail: function(){",
			"\t\t$2",
			"\t},",
			"})"
		],
		"description": "success 接口调用成功的回调函数，登陆态未过期\n\nfail 接口调用失败的回调函数，登陆态已过期\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 用户信息
	"wx.getUserInfo": {
		"prefix": "wxGetUserInfo",
		"body": [
			"wx.getUserInfo({",
			"\tsuccess: function(res) {",
			"\t\tvar userInfo = res.userInfo",
			"\t\tvar nickName = userInfo.nickName",
			"\t\tvar avatarUrl = userInfo.avatarUrl",
			"\t\tvar gender = userInfo.gender	// 性别：0：未知、1：男、2：女",
			"\t\tvar province = userInfo.province",
			"\t\tvar city = userInfo.city",
			"\t\tvar country = userInfo.country",
			"\t}",
			"})$1"
		],
		"description": "success 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）\n\n+++++success 返回参数说明：+++++\n\nuserInfo 用户信息对象，不包含 openid 等敏感信息rawData不包括敏感信息的原始数据字符串，用于计算签名。\n\nsignature使用sha1(rawData+sessionkey)得到字符串，用于校验用户信息。\n\nencryptedData包括敏感数据在内的完整用户信息的加密数据\n\niv加密算法的初始向量"
	},
	// 上传文件
	"wx.uploadFile": {
		"prefix": "wxUploadFile",
		"body": [
			"wx.uploadFile({",
			"\turl: '$1',",
			"\tfilePath: ${2:filePath},",
			"\tname: 'file',",
			"})$3"
		],
		"description": "url 开发者服务器 url\n\nfilePath 要上传文件资源的路径\n\nname 文件对应的 key , 开发者在服务器端通过这个 key 可以获取到文件二进制内容\n\nheader HTTP 请求 Header , header 中不能设置 Referer\n\nformData HTTP 请求中其他额外的 form data\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）\n\n+++++success 返回参数说明+++++:\n\ndata 开发者服务器返回的数据\n\nstatusCode HTTP状态码"
	},
	// 下载文件
	"wx.downloadFile": {
		"prefix": "wxDownloadFile",
		"body": [
			"wx.downloadFile({",
			"\turl: '$1',",
			"\ttype: ${2:image},",
			"\tsuccess: function(res) {",
			"\t\t// do something",
			"\t}",
			"})$3"
		],
		"description": "url 下载资源的 url\n\nheader HTTP 请求 Header\n\nsuccess 下载成功后以 tempFilePath 的形式传给页面，res = {tempFilePath: '文件的临时路径'}\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 选择图片
	"wx.chooseImage": {
		"prefix": "wxChooseImage",
		"body": [
			"wx.chooseImage({",
			"\tcount: 9,\t// 默认为9",
			"\tsizeType: [${1:'original', 'compressed'}],\t// 指定原图或者压缩图",
			"\tsourceType: ['${2:album}', '${3:camera}'],\t// 指定图片来源",
			"\tsuccess: function(res) {",
			"\t\tvar tempFilePaths = res.tempFilePaths",
			"\t}",
			"})$4"
		],
		"description": "count 最多可以选择的图片张数，默认9\n\nsizeType original 原图，compressed 压缩图，默认二者都有\n\nsourceType album 从相册选图，camera 使用相机，默认二者都有\n\nsuccess 成功则返回图片的本地文件路径列表tempFilePaths\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 预览图片
	"wx.previewImage": {
		"prefix": "wxPreviewImage",
		"body": [
			"wx.previewImage({",
			"\tcurrent: '$1',",
			"\turls: [$2]",
			"})$3"
		],
		"description": "current 当前显示图片的链接，不填则默认为 urls 的第一张\n\nurls 需要预览的图片链接列表\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 获取图片信息
	"wx.getImageInfo": {
		"prefix": "wxGetImageInfo",
		"body": [
			"wx.getImageInfo({",
			"\tsrc: '$1',",
			"\tsuccess: function(res) {",
			"\t\t${2:// width & height}",
			"\t}",
			"})"
		],
		"description": "src 图片的路径，可以是相对路径，临时文件路径，存储文件路径\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）\n\n+++++success 返回参数说明：+++++\n\nwidth 图片宽度，单位px\n\nheight 图片高度 单位px"
	},
	// 录音
	"wx.startRecord": {
		"prefix": "wxStartRecord",
		"body": [
			"wx.startRecord({",
			"\tsuccess: function(res) {",
			"\t\t${1://success, ruturn path of record}",
			"\t},",
			"\tfail: function(res) {",
			"\t\t${2:// fail, do something}",
			"\t},",
			"})"
		],
		"description": "success 录音成功后调用，返回录音文件的临时文件路径，res = {tempFilePath: '录音文件的临时路径'}\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	"wx.stopRecord": {
		"prefix": "wxStopRecord",
		"body": [
			"wx.stopRecord()"
		],
		"description": "停止录音"
	},
	// 音频播放控制
	"wx.playVoice": {
		"prefix": "wxPlayVoice",
		"body": [
			"wx.playVoice({",
			"\tfilePath: '$1'",
			"\t// callback functions, success & fail & complete",
			"})"
		],
		"description": "filePath 需要播放的语音文件的文件路径\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	"wx.pauseVoice": {
		"prefix": "wxPauseVoice",
		"body": [
			"wx.pauseVoice()"
		],
		"description": "暂停播放"
	},
	"wx.stopVoice": {
		"prefix": "wxStopVoice",
		"body": [
			"wx.stopVoice()"
		],
		"description": "停止播放"
	},
	/*=========
	音乐播放控制
	======== */
	// 获取音乐播放状态
	"wx.getBackgroundAudioPlayerState": {
		"prefix": "wxGetBackgroundAudioState",
		"body": [
			"wx.getBackgroundAudioPlayerState({",
			"\t// callbacks, success & fail & complete",
			"\tsuccess: function(res) {",
			"\t\tvar status = res.status; // 播放状态",
			"\t\tvar dataUrl = res.dataUrl; // 链接",
			"\t\tvar currentPosition = res.currentPosition; // 播放位置",
			"\t\tvar duration = res.duration; //音频长度",
			"\t\tvar downloadPercent = res.downloadPercent; // 下载进度",
			"\t}",
			"})"
		],
		"description": "success 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）\n\n+++++sucess 返回参数说明：+++++\n\nduration	选定音频的长度（单位：s），只有在当前有音乐播放时返回\n\ncurrentPosition 选定音频的播放位置（单位：s），只有在当前有音乐播放时返回\n\nstatus	播放状态（2：没有音乐在播放，1：播放中，0：暂停中）\n\ndownloadPercent	音频的下载进度（整数，80 代表 80%），只有在当前有音乐播放时返回\n\ndataUrl	歌曲数据链接，只有在当前有音乐播放时返回"
	},
	// 播放音乐
	"wx.playBackgroundAudio": {
		"prefix": "wxPlayBackgroundAudio",
		"body": [
			"wx.playBackgroundAudio({",
			"\tdataUrl: '$1',",
			"\ttitle: '$2',",
			"\tcoverImgUrl: '$3'",
			"\t${4:// callback functions, success & fail & complete}",
			"})"
		],
		"description": "dataUrl 音乐链接\n\ntitle 音乐标题\n\ncoverImgUrl 封面URL\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 暂停播放音乐
	"wx.pauseBackgroundAudio": {
		"prefix": "wxPauseBackgroundAudio",
		"body": "wx.pauseBackgroundAudio()",
		"description": "暂停播放音乐"
	},
	// 控制播放音乐进度
	"wx.seekBackgroundAudio": {
		"prefix": "wxSeekBackgroundAudio",
		"body": [
			"wx.seekBackgroundAudio({",
			"\tposition: ${1:100}",
			"\t${2:// callback functions, success & fail & complete}",
			"})"
		],
		"description": "position 音乐位置，单位：秒\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 停止播放音乐
	"wx.stopBackgroundAudio": {
		"prefix": "wxStopBackgroundAudio",
		"body": "wx.stopBackgroundAudio()",
		"description": "停止播放音乐"
	},
	// 跳转页面
	"wx.navigateTo": {
		"prefix": "wxNavigateTo",
		"body": [
			"wx.navigateTo({",
			"\turl: '$1'",
			"})$2"
		],
		"description": "保留当前页面并跳转页面"
	},
	// 跳转页面
	"wx.redirectTo": {
		"prefix": "wxRedirectTo",
		"body": [
			"wx.redirectTo({",
			"\turl: '$1'",
			"})$2"
		],
		"description": "关闭当前页面并跳转页面"
	},
	// 创建websocket
	"wx.connectSocket": {
		"prefix": "wxConnectSocket",
		"body": [
			"wx.connectSocket({",
			"\turl: '$1',",
			"\tsuccess: function(res) {",
			"\t\t$2",
			"\t}",
			"})$3"
		],
		"description": "url 开发者服务器接口地址，必须是 wss 协议，且域名必须是后台配置的合法域名\n\ndata 请求的数据\n\nheader HTTP Header , header 中不能设置 Referer\n\nmethod 默认是GET，有效值为： OPTIONS, GET, HEAD, POST, PUT, DELETE, TRACE, CONNECT\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 监听WebSocket连接打开事件
	"wx.onSocketOpen": {
		"prefix": "wxOnSocketOpen",
		"body": [
			"wx.onSocketOpen(function(res) {",
			"\t${1:// do something}",
			"})$2"
		],
		"description": "监听WebSocket连接打开事件"
	},
	// 监听WebSocket错误
	"wx.onSocketError": {
		"prefix": "wxOnSocketError",
		"body": [
			"wx.onSocketError(function(res) {",
			"\t${1:// do something}",
			"})$2"
		],
		"description": "监听WebSocket错误"
	},
	// 通过 WebSocket 连接发送数据
	"wx.sendSocketMessage": {
		"prefix": "wxSendSocketMessage",
		"body": [
			"wx.senfSocketMessage({",
			"\tdata: ${1:data}",
			"})$2"
		],
		"description": "data 需要发送的内容\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 监听WebSocket接受到服务器的消息事件
	"wx.onSocketMessage": {
		"prefix": "wxOnSocketMessage",
		"body": [
			"wx.onSocketMessage(function(res) {",
			"\t${1:// do something}",
			"})$2"
		],
		"description": "data 服务器返回的消息"
	},
	// 关闭WebSocket连接
	"wx.closeSocket": {
		"prefix": "wxCloseSocket",
		"body": "wx.closeSocket()",
		"description": "关闭WebSocket连接"
	},
	// 监听WebSocket关闭
	"wx.onSocketClose": {
		"prefix": "wxOnSocketClose",
		"body": [
			"wx.onSocketClose(function(res) {",
			"\t${1:// do something}",
			"})$2"
		],
		"description": "监听WebSocket关闭"
	},
	/* =========
	文件
	======== */
	// 保存文件到本地
	"wx.saveFile": {
		"prefix": "wxSaveFile",
		"body": [
			"wx.saveFile({",
			"\ttempFilePath: '$1',",
			"\tsuccess: function(res) {",
			"\t\t// success",
			"\t}",
			"})"
		],
		"description": "tempFilePath 需要保存的文件的临时路径\n\nsuccess 返回文件的保存路径，res = {savedFilePath: '文件的保存路径'}\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 获取保存到本地的文件列表
	"wx.getSavedFileList": {
		"prefix": "wxGetSavedFileList",
		"body": [
			"wx.getSavedFileList({",
			"\tsuccess: function(res) {",
			"\t\t${1:console.log(res.fileList)}",
			"\t\t${2:// callback functions, fail & complete}",
			"\t}",
			"})"
		],
		"description": "success 接口调用成功的回调函数，返回结果见success返回参数说明\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）\n\n+++++success 返回参数说明：+++++\n\nerrMsg 接口调用结果\n\nfileList 文件列表\n\n+++++ fileList 说明：+++++\n\nfilePath 文件的本地路径\n\ncreateTime 文件的保存时的时间戳，从1970/01/01 08:00:00 到当前时间的秒数\n\nsize 文件大小，单位B"
	},
	// 获取本地文件的文件信息
	"wx.getSavedFileInfo": {
		"prefix": "wxGetSavedFileInfo",
		"body": [
			"wx.getSavedFileInfo({",
			"\tfilePath: $1,",
			"\tsuccess: function(res) {",
			"\t\t${2:// res.size & res.createTime}",
			"\t}",
			"})"
		],
		"description": "filePath 文件路径\n\nsuccess 接口调用成功的回调函数，返回结果见success返回参数说明\n\nfail 接口调失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）\n\n+++++success 返回参数说明：+++++errMsg 接口调用结果\n\nsize 文件大小，单位B\n\ncreateTime 文件的保存是的时间戳，从1970/01/01 08:00:00 到当前时间的秒数"
	},
	// 删除本地存储的文件
	"wx.removeSavedFile": {
		"prefix": "wxRemoveSavedFile",
		"body": [
			"wx.removeSavedFile({",
			"\tfilePath: ${1:path}",
			"\t${2:// callback functions, success & fail & complete}",
			"})"
		],
		"description": "filePath 需要删除的文件路径\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 新开页面打开文档
	"wx.openDocument": {
		"prefix": "wxOpenDocument",
		"body": [
			"wx.openDocument({",
			"\tfilePath: '$1'",
			"})"
		],
		"description": "filePath 文件路径，可通过 downFile 获得\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 接口调用成功的回调函数
	"success": {
		"prefix": "success",
		"body": [
			"success: function() {",
			"\t$1",
			"}"
		],
		"description": "接口调用成功的回调函数"
	},
	// 接口调用失败的回调函数
	"fail": {
		"prefix": "fail",
		"body": [
			"fail: function() {",
			"\t$1",
			"}"
		],
		"description": "接口调用失败的回调函数"
	},
	// 接口调用结束的回调函数（调用成功、失败都会执行）
	"complete": {
		"prefix": "complete",
		"body": [
			"complete: function() {",
			"\t$1",
			"}"
		],
		"description": "接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 拨打电话
	"wx.makePhoneCall": {
		"prefix": "wxMakePhoneCall",
		"body": [
			"wx.makePhoneCall({",
			"\tphoneNumber: '$1'",
			"})"
		],
		"description": "phoneNumber 需要拨打的电话号码\n\nsuccess 接口调用成功的回调\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 显示消息提示框
	"wx.showToast": {
		"prefix": "wxShowToast",
		"body": [
			"wx.showToast({",
			"\ttitle: '$1',",
			"\ticon: '$2'",
			"})"
		],
		"description": "title 提示的内容\n\nicon 图标，只支持\"success\"、\"loading\"\n\nduration 提示的延迟时间，单位毫秒，默认：1500, 最大为10000\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	// 隐藏消息提示框
	"wx.hideToast": {
		"prefix": "wxHideToast",
		"body": "wx.hideToast()",
		"description": "隐藏消息提示框"
	},
	// 显示模态弹窗
	"wx.showModal": {
		"prefix": "wxShowModal",
		"body": [
			"wx.showModal({",
			"\ttitle: '$1',",
			"\tcontent: '$2',",
			"})"
		],
		"description": "title 提示的标题\n\ncontent 提示的内容\n\nshowCancel 是否显示取消按钮，默认为 true\n\ncancelText 取消按钮的文字，默认为\"取消\"\n\ncancelColor 取消按钮的文字颜色，默认为\"#000000\"\n\nconfirmText 确定按钮的文字，默认为\"确定\"\n\nconfirmColor 确定按钮的文字颜色，默认为\"#3CC51F\"\n\nsuccess 接口调用成功的回调函数，返回res.confirm==1时，表示用户点击确定按钮\n\nfail接口调用失败的回调函数"
	},
	// 显示底部上拉菜单栏
	"wx.showActionSheet": {
		"prefix": "wxShowActionSheet",
		"body": [
			"wx.showActionSheet({",
			"\titemList: [$1],",
			"\titemColor: '$2'",
			"})"
		],
		"description": "itemList 按钮的文字数组，数组长度最大为6个\n\nitemColor 按钮的文字颜色，默认为\"#000000\"\n\nsuccess 接口调用成功的回调函数，详见返回参数说明\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）\n\n+++++success 返回参数说明：+++++\n\ncancel 用户是否取消选择\n\ntapIndex 用户点击的按钮，从上到下的顺序，从0开始"
	},
	// 收起键盘
	"wx.hideKeyboard": {
		"prefix": "wxHideKeyboard",
		"body": "wx.hideKeyboard()",
		"description": "收起键盘"
	},
	// 停止当前页面下拉刷新
	"wx.stopPullDownRefresh": {
		"prefix": "wxStopPullDownRefresh",
		"body": "wx.stopPullDownRefresh()",
		"description": "停止当前页面下拉刷新"
	},
	// 数据缓存
	"wx.setStorage": {
		"prefix": "wxSetStorage",
		"body": [
			"wx.setStorage({",
			"\tkey: '$1',",
			"\tdata: '$2'",
			"})"
		],
		"description": "key 本地缓存中指定的 key\n\ndata 需要存储的内容\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	"wx.setStorageSync": {
		"prefix": "wxSetStorageSync",
		"body": "wx.setStorageSync(${1:key}, ${2:data})",
		"description": "key 本地缓存中的指定的 key\n\ndata 需要存储的内容"
	},
	"wx.getStorage": {
		"prefix": "wxGetStorage",
		"body": [
			"wx.getStorage({",
			"\tkey: '$1'",
			"})"
		],
		"description": "key 本地缓存中的指定的 key\n\nsuccess 接口调用的回调函数,res = {data: key对应的内容}\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	"wx.getStorageSync": {
		"prefix": "wxGetStorageSync",
		"body": "wx.getStorageSync('key')",
		"description": "从本地缓存中同步获取指定 key 对应的内容。"
	},
	"wx.getStorageInfo": {
		"prefix": "wxGetStorageInfo",
		"body": [
			"wx.getStorageInfo({",
			"\tsuccess: function(res) {",
			"\t\t$1",
			"\t}",
			"})"
		],
		"description": "success 接口调用的回调函数，详见返回参数说明\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）\n\n+++++sucess 返回参数说明：+++++\n\nkeys 当前storage中所有的key\n\ncurrentSize 当前占用的空间大小, 单位kb\n\nlimitSize 限制的空间大小，单位kb"
	},
	"wx.getStorageInfoSync": {
		"prefix": "wxGetStorageInfoSync",
		"body": "wx.getStorageInfoSync()",
		"description": "同步获取当前storage的相关信息"
	},
	"wx.removeStorage": {
		"prefix": "wxRemoveStorage",
		"body": [
			"wx.removeStorage({",
			"\tkey: '$1',",
			"\tsuccess: function(res) {",
			"\t\t$2",
			"\t}",
			"})"
		],
		"description": "从本地缓存中异步移除指定 key"
	},
	"wx.removeStorageSync": {
		"prefix": "wxRemoveStorageSync",
		"body": "wx.removeStorageSync('key')",
		"description": "从本地缓存中同步移除指定 key"
	},
	"wx.clearStorage": {
		"prefix": "wxClearStorage",
		"body": "wx.clearStorage()",
		"description": "清理本地数据缓存"
	},
	"wx.clearStorageSync": {
		"prefix": "wxClearStorageSync",
		"body": "wx.clearStorageSync()",
		"description": "同步清理本地数据缓存"
	},
	"wx.getNetworkType": {
		"prefix": "wxGetNetworkType",
		"body": [
			"wx.getNetworkType({",
			"\tsuccess: function(res) {",
			"\t\t$1",
			"\t}",
			"})"
		],
		"description": "success 接口调用成功，返回网络类型 networkType 2g，3g，4g，wifi\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	},
	"wx.getSystemInfo": {
		"prefix": "wxGetSystemInfo",
		"body": [
			"wx.getSystemInfo({",
			"\tsuccess: function(res) {",
			"\t\t$1",
			"}",
			"})"
		],
		"description": "model	手机型号\n\npixelRatio	设备像素比\n\nwindowWidth	窗口宽度\n\nwindowHeight	窗口高度\n\nlanguage	微信设置的语言\n\nversion	微信版本号"
	},
	"wx.getSystemInfoSync": {
		"prefix": "wxGetSystemInfoSync",
		"body": "wx.getSystemInfoSync()",
		"description": "model	手机型号\n\npixelRatio	设备像素比\n\nwindowWidth	窗口宽度\n\nwindowHeight	窗口高度\n\nlanguage	微信设置的语言\n\nversion	微信版本号"
	},
	"wx.onAccelerometerChange": {
		"prefix": "wxOnAccelerometerChange",
		"body": [
			"wx.onAccelerometerChange(function(res) {",
			"\t// res.x, res.y, res.z",
			"})"
		],
		"description": "x X 轴\n\ny Y 轴\n\nz Z 轴"
	},
	"wx.onCompassChange": {
		"prefix": "wxOnCompassChange",
		"body": [
			"wx.onCompassChange(function(res) {",
			"\t// res.direction",
			"})"
		],
		"description": "direction 面对的方向度数"
	},
	// 微信支付
	"wx.requestPayment": {
		"prefix": "wxRequestPayment",
		"body": [
			"wx.requestPayment({",
			"\ttimeStamp: '$1',",
			"\tnonceStr: '$2',",
			"\tpackage: '$3',",
			"\tsignType: '$4',",
			"\tpaySign: '$5',",
			"\tsuccess: function(res){",
			"\t\t$6",
			"\t},",
			"\tfail: function(res){",
			"\t\t$7",
			"\t}",
			"})"
		],
		"description": "timeStamp 时间戳从1970年1月1日00:00:00至今的秒数,即当前的时间\n\nnonceStr 随机字符串，长度为32个字符以下。\n\npackage 统一下单接口返回的 prepay_id 参数值，提交格式如：prepay_id=*\n\nsignType 签名算法，暂支持 MD5 paySign 签名,具体签名方案参见微信公众号支付帮助文档;\n\nsuccess 接口调用成功的回调函数\n\nfail 接口调用失败的回调函数\n\ncomplete 接口调用结束的回调函数（调用成功、失败都会执行）"
	}
}